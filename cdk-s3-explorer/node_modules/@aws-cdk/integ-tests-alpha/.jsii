{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "aws-cdk-lib": "^2.214.0",
    "constructs": "^10.0.0"
  },
  "dependencyClosure": {
    "@aws-cdk/asset-awscli-v1": {
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.Asset.AwsCliV1",
          "packageId": "Amazon.CDK.Asset.AwsCliV1"
        },
        "go": {
          "moduleName": "github.com/cdklabs/awscdk-asset-awscli-go",
          "packageName": "awscliv1"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-asset-awscli-v1",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cdk.asset.awscli.v1"
        },
        "js": {
          "npm": "@aws-cdk/asset-awscli-v1"
        },
        "python": {
          "distName": "aws-cdk.asset-awscli-v1",
          "module": "aws_cdk.asset_awscli_v1"
        }
      }
    },
    "@aws-cdk/asset-node-proxy-agent-v6": {
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.Asset.NodeProxyAgentV6",
          "packageId": "Amazon.CDK.Asset.NodeProxyAgentV6"
        },
        "go": {
          "moduleName": "github.com/cdklabs/awscdk-asset-node-proxy-agent-go",
          "packageName": "nodeproxyagentv6"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-asset-node-proxy-agent-v6",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cdk.asset.node.proxy.agent.v6"
        },
        "js": {
          "npm": "@aws-cdk/asset-node-proxy-agent-v6"
        },
        "python": {
          "distName": "aws-cdk.asset-node-proxy-agent-v6",
          "module": "aws_cdk.asset_node_proxy_agent_v6"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "go": {
          "moduleName": "github.com/cdklabs/cloud-assembly-schema-go"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "aws-cdk-lib": {
      "submodules": {
        "aws-cdk-lib.alexa_ask": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Alexa.Ask"
            },
            "java": {
              "package": "software.amazon.awscdk.alexa.ask"
            },
            "python": {
              "module": "aws_cdk.alexa_ask"
            }
          }
        },
        "aws-cdk-lib.assertions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Assertions"
            },
            "java": {
              "package": "software.amazon.awscdk.assertions"
            },
            "python": {
              "module": "aws_cdk.assertions"
            }
          }
        },
        "aws-cdk-lib.assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.assets"
            },
            "python": {
              "module": "aws_cdk.assets"
            }
          }
        },
        "aws-cdk-lib.aws_accessanalyzer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AccessAnalyzer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.accessanalyzer"
            },
            "python": {
              "module": "aws_cdk.aws_accessanalyzer"
            }
          }
        },
        "aws-cdk-lib.aws_acmpca": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ACMPCA"
            },
            "java": {
              "package": "software.amazon.awscdk.services.acmpca"
            },
            "python": {
              "module": "aws_cdk.aws_acmpca"
            }
          }
        },
        "aws-cdk-lib.aws_aiops": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.AIOps"
            },
            "java": {
              "package": "software.amazon.awscdk.services.aiops"
            },
            "python": {
              "module": "aws_cdk.aws_aiops"
            }
          }
        },
        "aws-cdk-lib.aws_amazonmq": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AmazonMQ"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amazonmq"
            },
            "python": {
              "module": "aws_cdk.aws_amazonmq"
            }
          }
        },
        "aws-cdk-lib.aws_amplify": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Amplify"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amplify"
            },
            "python": {
              "module": "aws_cdk.aws_amplify"
            }
          }
        },
        "aws-cdk-lib.aws_amplifyuibuilder": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AmplifyUIBuilder"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amplifyuibuilder"
            },
            "python": {
              "module": "aws_cdk.aws_amplifyuibuilder"
            }
          }
        },
        "aws-cdk-lib.aws_apigateway": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.APIGateway"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apigateway"
            },
            "python": {
              "module": "aws_cdk.aws_apigateway"
            }
          }
        },
        "aws-cdk-lib.aws_apigatewayv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Apigatewayv2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apigatewayv2"
            },
            "python": {
              "module": "aws_cdk.aws_apigatewayv2"
            }
          }
        },
        "aws-cdk-lib.aws_apigatewayv2_authorizers": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AwsApigatewayv2Authorizers"
            },
            "java": {
              "package": "software.amazon.awscdk.aws_apigatewayv2_authorizers"
            },
            "python": {
              "module": "aws_cdk.aws_apigatewayv2_authorizers"
            }
          }
        },
        "aws-cdk-lib.aws_apigatewayv2_integrations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AwsApigatewayv2Integrations"
            },
            "java": {
              "package": "software.amazon.awscdk.aws_apigatewayv2_integrations"
            },
            "python": {
              "module": "aws_cdk.aws_apigatewayv2_integrations"
            }
          }
        },
        "aws-cdk-lib.aws_appconfig": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppConfig"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appconfig"
            },
            "python": {
              "module": "aws_cdk.aws_appconfig"
            }
          }
        },
        "aws-cdk-lib.aws_appflow": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppFlow"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appflow"
            },
            "python": {
              "module": "aws_cdk.aws_appflow"
            }
          }
        },
        "aws-cdk-lib.aws_appintegrations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppIntegrations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appintegrations"
            },
            "python": {
              "module": "aws_cdk.aws_appintegrations"
            }
          }
        },
        "aws-cdk-lib.aws_applicationautoscaling": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling"
            },
            "java": {
              "package": "software.amazon.awscdk.services.applicationautoscaling"
            },
            "python": {
              "module": "aws_cdk.aws_applicationautoscaling"
            }
          }
        },
        "aws-cdk-lib.aws_applicationinsights": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ApplicationInsights"
            },
            "java": {
              "package": "software.amazon.awscdk.services.applicationinsights"
            },
            "python": {
              "module": "aws_cdk.aws_applicationinsights"
            }
          }
        },
        "aws-cdk-lib.aws_applicationsignals": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.ApplicationSignals"
            },
            "java": {
              "package": "software.amazon.awscdk.services.applicationsignals"
            },
            "python": {
              "module": "aws_cdk.aws_applicationsignals"
            }
          }
        },
        "aws-cdk-lib.aws_appmesh": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppMesh"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appmesh"
            },
            "python": {
              "module": "aws_cdk.aws_appmesh"
            }
          }
        },
        "aws-cdk-lib.aws_apprunner": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppRunner"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apprunner"
            },
            "python": {
              "module": "aws_cdk.aws_apprunner"
            }
          }
        },
        "aws-cdk-lib.aws_appstream": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppStream"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appstream"
            },
            "python": {
              "module": "aws_cdk.aws_appstream"
            }
          }
        },
        "aws-cdk-lib.aws_appsync": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppSync"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appsync"
            },
            "python": {
              "module": "aws_cdk.aws_appsync"
            }
          }
        },
        "aws-cdk-lib.aws_apptest": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.AppTest"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apptest"
            },
            "python": {
              "module": "aws_cdk.aws_apptest"
            }
          }
        },
        "aws-cdk-lib.aws_aps": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.APS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.aps"
            },
            "python": {
              "module": "aws_cdk.aws_aps"
            }
          }
        },
        "aws-cdk-lib.aws_arcregionswitch": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.ARCRegionSwitch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.arcregionswitch"
            },
            "python": {
              "module": "aws_cdk.aws_arcregionswitch"
            }
          }
        },
        "aws-cdk-lib.aws_arczonalshift": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.ARCZonalShift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.arczonalshift"
            },
            "python": {
              "module": "aws_cdk.aws_arczonalshift"
            }
          }
        },
        "aws-cdk-lib.aws_athena": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Athena"
            },
            "java": {
              "package": "software.amazon.awscdk.services.athena"
            },
            "python": {
              "module": "aws_cdk.aws_athena"
            }
          }
        },
        "aws-cdk-lib.aws_auditmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AuditManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.auditmanager"
            },
            "python": {
              "module": "aws_cdk.aws_auditmanager"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling_common": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling.Common"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling.common"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling_common"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling_hooktargets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling.HookTargets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling.hooktargets"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling_hooktargets"
            }
          }
        },
        "aws-cdk-lib.aws_autoscalingplans": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScalingPlans"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscalingplans"
            },
            "python": {
              "module": "aws_cdk.aws_autoscalingplans"
            }
          }
        },
        "aws-cdk-lib.aws_b2bi": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.B2BI"
            },
            "java": {
              "package": "software.amazon.awscdk.services.b2bi"
            },
            "python": {
              "module": "aws_cdk.aws_b2bi"
            }
          }
        },
        "aws-cdk-lib.aws_backup": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Backup"
            },
            "java": {
              "package": "software.amazon.awscdk.services.backup"
            },
            "python": {
              "module": "aws_cdk.aws_backup"
            }
          }
        },
        "aws-cdk-lib.aws_backupgateway": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.BackupGateway"
            },
            "java": {
              "package": "software.amazon.awscdk.services.backupgateway"
            },
            "python": {
              "module": "aws_cdk.aws_backupgateway"
            }
          }
        },
        "aws-cdk-lib.aws_batch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Batch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.batch"
            },
            "python": {
              "module": "aws_cdk.aws_batch"
            }
          }
        },
        "aws-cdk-lib.aws_bcmdataexports": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.BCMDataExports"
            },
            "java": {
              "package": "software.amazon.awscdk.services.bcmdataexports"
            },
            "python": {
              "module": "aws_cdk.aws_bcmdataexports"
            }
          }
        },
        "aws-cdk-lib.aws_bedrock": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Bedrock"
            },
            "java": {
              "package": "software.amazon.awscdk.services.bedrock"
            },
            "python": {
              "module": "aws_cdk.aws_bedrock"
            }
          }
        },
        "aws-cdk-lib.aws_billingconductor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.BillingConductor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.billingconductor"
            },
            "python": {
              "module": "aws_cdk.aws_billingconductor"
            }
          }
        },
        "aws-cdk-lib.aws_budgets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Budgets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.budgets"
            },
            "python": {
              "module": "aws_cdk.aws_budgets"
            }
          }
        },
        "aws-cdk-lib.aws_cassandra": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cassandra"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cassandra"
            },
            "python": {
              "module": "aws_cdk.aws_cassandra"
            }
          }
        },
        "aws-cdk-lib.aws_ce": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CE"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ce"
            },
            "python": {
              "module": "aws_cdk.aws_ce"
            }
          }
        },
        "aws-cdk-lib.aws_certificatemanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CertificateManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.certificatemanager"
            },
            "python": {
              "module": "aws_cdk.aws_certificatemanager"
            }
          }
        },
        "aws-cdk-lib.aws_chatbot": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Chatbot"
            },
            "java": {
              "package": "software.amazon.awscdk.services.chatbot"
            },
            "python": {
              "module": "aws_cdk.aws_chatbot"
            }
          }
        },
        "aws-cdk-lib.aws_cleanrooms": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.CleanRooms"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cleanrooms"
            },
            "python": {
              "module": "aws_cdk.aws_cleanrooms"
            }
          }
        },
        "aws-cdk-lib.aws_cleanroomsml": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.CleanRoomsML"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cleanroomsml"
            },
            "python": {
              "module": "aws_cdk.aws_cleanroomsml"
            }
          }
        },
        "aws-cdk-lib.aws_cloud9": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cloud9"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloud9"
            },
            "python": {
              "module": "aws_cdk.aws_cloud9"
            }
          }
        },
        "aws-cdk-lib.aws_cloudformation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFormation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudformation"
            },
            "python": {
              "module": "aws_cdk.aws_cloudformation"
            }
          }
        },
        "aws-cdk-lib.aws_cloudfront": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFront"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudfront"
            },
            "python": {
              "module": "aws_cdk.aws_cloudfront"
            }
          }
        },
        "aws-cdk-lib.aws_cloudfront.experimental": {},
        "aws-cdk-lib.aws_cloudfront_origins": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFront.Origins"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudfront.origins"
            },
            "python": {
              "module": "aws_cdk.aws_cloudfront_origins"
            }
          }
        },
        "aws-cdk-lib.aws_cloudtrail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudTrail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudtrail"
            },
            "python": {
              "module": "aws_cdk.aws_cloudtrail"
            }
          }
        },
        "aws-cdk-lib.aws_cloudwatch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudWatch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudwatch"
            },
            "python": {
              "module": "aws_cdk.aws_cloudwatch"
            }
          }
        },
        "aws-cdk-lib.aws_cloudwatch_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudWatch.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudwatch.actions"
            },
            "python": {
              "module": "aws_cdk.aws_cloudwatch_actions"
            }
          }
        },
        "aws-cdk-lib.aws_codeartifact": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeArtifact"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codeartifact"
            },
            "python": {
              "module": "aws_cdk.aws_codeartifact"
            }
          }
        },
        "aws-cdk-lib.aws_codebuild": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeBuild"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codebuild"
            },
            "python": {
              "module": "aws_cdk.aws_codebuild"
            }
          }
        },
        "aws-cdk-lib.aws_codecommit": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeCommit"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codecommit"
            },
            "python": {
              "module": "aws_cdk.aws_codecommit"
            }
          }
        },
        "aws-cdk-lib.aws_codeconnections": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.CodeConnections"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codeconnections"
            },
            "python": {
              "module": "aws_cdk.aws_codeconnections"
            }
          }
        },
        "aws-cdk-lib.aws_codedeploy": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeDeploy"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codedeploy"
            },
            "python": {
              "module": "aws_cdk.aws_codedeploy"
            }
          }
        },
        "aws-cdk-lib.aws_codeguruprofiler": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeGuruProfiler"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codeguruprofiler"
            },
            "python": {
              "module": "aws_cdk.aws_codeguruprofiler"
            }
          }
        },
        "aws-cdk-lib.aws_codegurureviewer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeGuruReviewer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codegurureviewer"
            },
            "python": {
              "module": "aws_cdk.aws_codegurureviewer"
            }
          }
        },
        "aws-cdk-lib.aws_codepipeline": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodePipeline"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codepipeline"
            },
            "python": {
              "module": "aws_cdk.aws_codepipeline"
            }
          }
        },
        "aws-cdk-lib.aws_codepipeline_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodePipeline.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codepipeline.actions"
            },
            "python": {
              "module": "aws_cdk.aws_codepipeline_actions"
            }
          }
        },
        "aws-cdk-lib.aws_codestar": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Codestar"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestar"
            },
            "python": {
              "module": "aws_cdk.aws_codestar"
            }
          }
        },
        "aws-cdk-lib.aws_codestarconnections": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeStarConnections"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestarconnections"
            },
            "python": {
              "module": "aws_cdk.aws_codestarconnections"
            }
          }
        },
        "aws-cdk-lib.aws_codestarnotifications": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeStarNotifications"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestarnotifications"
            },
            "python": {
              "module": "aws_cdk.aws_codestarnotifications"
            }
          }
        },
        "aws-cdk-lib.aws_cognito": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cognito"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cognito"
            },
            "python": {
              "module": "aws_cdk.aws_cognito"
            }
          }
        },
        "aws-cdk-lib.aws_cognito_identitypool": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cognito.Identitypool"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cognito.identitypool"
            },
            "python": {
              "module": "aws_cdk.aws_cognito_identitypool"
            }
          }
        },
        "aws-cdk-lib.aws_comprehend": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Comprehend"
            },
            "java": {
              "package": "software.amazon.awscdk.services.comprehend"
            },
            "python": {
              "module": "aws_cdk.aws_comprehend"
            }
          }
        },
        "aws-cdk-lib.aws_config": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Config"
            },
            "java": {
              "package": "software.amazon.awscdk.services.config"
            },
            "python": {
              "module": "aws_cdk.aws_config"
            }
          }
        },
        "aws-cdk-lib.aws_connect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Connect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.connect"
            },
            "python": {
              "module": "aws_cdk.aws_connect"
            }
          }
        },
        "aws-cdk-lib.aws_connectcampaigns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ConnectCampaigns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.connectcampaigns"
            },
            "python": {
              "module": "aws_cdk.aws_connectcampaigns"
            }
          }
        },
        "aws-cdk-lib.aws_connectcampaignsv2": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.ConnectCampaignsV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.connectcampaignsv2"
            },
            "python": {
              "module": "aws_cdk.aws_connectcampaignsv2"
            }
          }
        },
        "aws-cdk-lib.aws_controltower": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ControlTower"
            },
            "java": {
              "package": "software.amazon.awscdk.services.controltower"
            },
            "python": {
              "module": "aws_cdk.aws_controltower"
            }
          }
        },
        "aws-cdk-lib.aws_cur": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CUR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cur"
            },
            "python": {
              "module": "aws_cdk.aws_cur"
            }
          }
        },
        "aws-cdk-lib.aws_customerprofiles": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CustomerProfiles"
            },
            "java": {
              "package": "software.amazon.awscdk.services.customerprofiles"
            },
            "python": {
              "module": "aws_cdk.aws_customerprofiles"
            }
          }
        },
        "aws-cdk-lib.aws_databrew": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataBrew"
            },
            "java": {
              "package": "software.amazon.awscdk.services.databrew"
            },
            "python": {
              "module": "aws_cdk.aws_databrew"
            }
          }
        },
        "aws-cdk-lib.aws_datapipeline": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataPipeline"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datapipeline"
            },
            "python": {
              "module": "aws_cdk.aws_datapipeline"
            }
          }
        },
        "aws-cdk-lib.aws_datasync": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataSync"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datasync"
            },
            "python": {
              "module": "aws_cdk.aws_datasync"
            }
          }
        },
        "aws-cdk-lib.aws_datazone": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.DataZone"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datazone"
            },
            "python": {
              "module": "aws_cdk.aws_datazone"
            }
          }
        },
        "aws-cdk-lib.aws_dax": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DAX"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dax"
            },
            "python": {
              "module": "aws_cdk.aws_dax"
            }
          }
        },
        "aws-cdk-lib.aws_deadline": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Deadline"
            },
            "java": {
              "package": "software.amazon.awscdk.services.deadline"
            },
            "python": {
              "module": "aws_cdk.aws_deadline"
            }
          }
        },
        "aws-cdk-lib.aws_detective": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Detective"
            },
            "java": {
              "package": "software.amazon.awscdk.services.detective"
            },
            "python": {
              "module": "aws_cdk.aws_detective"
            }
          }
        },
        "aws-cdk-lib.aws_devicefarm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DeviceFarm"
            },
            "java": {
              "package": "software.amazon.awscdk.services.devicefarm"
            },
            "python": {
              "module": "aws_cdk.aws_devicefarm"
            }
          }
        },
        "aws-cdk-lib.aws_devopsguru": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DevOpsGuru"
            },
            "java": {
              "package": "software.amazon.awscdk.services.devopsguru"
            },
            "python": {
              "module": "aws_cdk.aws_devopsguru"
            }
          }
        },
        "aws-cdk-lib.aws_directoryservice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DirectoryService"
            },
            "java": {
              "package": "software.amazon.awscdk.services.directoryservice"
            },
            "python": {
              "module": "aws_cdk.aws_directoryservice"
            }
          }
        },
        "aws-cdk-lib.aws_dlm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DLM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dlm"
            },
            "python": {
              "module": "aws_cdk.aws_dlm"
            }
          }
        },
        "aws-cdk-lib.aws_dms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dms"
            },
            "python": {
              "module": "aws_cdk.aws_dms"
            }
          }
        },
        "aws-cdk-lib.aws_docdb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DocDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.docdb"
            },
            "python": {
              "module": "aws_cdk.aws_docdb"
            }
          }
        },
        "aws-cdk-lib.aws_docdbelastic": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DocDBElastic"
            },
            "java": {
              "package": "software.amazon.awscdk.services.docdbelastic"
            },
            "python": {
              "module": "aws_cdk.aws_docdbelastic"
            }
          }
        },
        "aws-cdk-lib.aws_dsql": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.DSQL"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dsql"
            },
            "python": {
              "module": "aws_cdk.aws_dsql"
            }
          }
        },
        "aws-cdk-lib.aws_dynamodb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DynamoDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dynamodb"
            },
            "python": {
              "module": "aws_cdk.aws_dynamodb"
            }
          }
        },
        "aws-cdk-lib.aws_ec2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EC2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ec2"
            },
            "python": {
              "module": "aws_cdk.aws_ec2"
            }
          }
        },
        "aws-cdk-lib.aws_ecr": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecr"
            },
            "python": {
              "module": "aws_cdk.aws_ecr"
            }
          }
        },
        "aws-cdk-lib.aws_ecr_assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Ecr.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecr.assets"
            },
            "python": {
              "module": "aws_cdk.aws_ecr_assets"
            }
          }
        },
        "aws-cdk-lib.aws_ecs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecs"
            },
            "python": {
              "module": "aws_cdk.aws_ecs"
            }
          }
        },
        "aws-cdk-lib.aws_ecs_patterns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECS.Patterns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecs.patterns"
            },
            "python": {
              "module": "aws_cdk.aws_ecs_patterns"
            }
          }
        },
        "aws-cdk-lib.aws_efs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EFS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.efs"
            },
            "python": {
              "module": "aws_cdk.aws_efs"
            }
          }
        },
        "aws-cdk-lib.aws_eks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EKS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.eks"
            },
            "python": {
              "module": "aws_cdk.aws_eks"
            }
          }
        },
        "aws-cdk-lib.aws_elasticache": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElastiCache"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticache"
            },
            "python": {
              "module": "aws_cdk.aws_elasticache"
            }
          }
        },
        "aws-cdk-lib.aws_elasticbeanstalk": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticBeanstalk"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticbeanstalk"
            },
            "python": {
              "module": "aws_cdk.aws_elasticbeanstalk"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancing": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancing"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancing"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancing"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2.actions"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2_actions"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2.targets"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2_targets"
            }
          }
        },
        "aws-cdk-lib.aws_elasticsearch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Elasticsearch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticsearch"
            },
            "python": {
              "module": "aws_cdk.aws_elasticsearch"
            }
          }
        },
        "aws-cdk-lib.aws_emr": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emr"
            },
            "python": {
              "module": "aws_cdk.aws_emr"
            }
          }
        },
        "aws-cdk-lib.aws_emrcontainers": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMRContainers"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emrcontainers"
            },
            "python": {
              "module": "aws_cdk.aws_emrcontainers"
            }
          }
        },
        "aws-cdk-lib.aws_emrserverless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMRServerless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emrserverless"
            },
            "python": {
              "module": "aws_cdk.aws_emrserverless"
            }
          }
        },
        "aws-cdk-lib.aws_entityresolution": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.EntityResolution"
            },
            "java": {
              "package": "software.amazon.awscdk.services.entityresolution"
            },
            "python": {
              "module": "aws_cdk.aws_entityresolution"
            }
          }
        },
        "aws-cdk-lib.aws_events": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Events"
            },
            "java": {
              "package": "software.amazon.awscdk.services.events"
            },
            "python": {
              "module": "aws_cdk.aws_events"
            }
          }
        },
        "aws-cdk-lib.aws_events_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Events.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.events.targets"
            },
            "python": {
              "module": "aws_cdk.aws_events_targets"
            }
          }
        },
        "aws-cdk-lib.aws_eventschemas": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EventSchemas"
            },
            "java": {
              "package": "software.amazon.awscdk.services.eventschemas"
            },
            "python": {
              "module": "aws_cdk.aws_eventschemas"
            }
          }
        },
        "aws-cdk-lib.aws_evidently": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Evidently"
            },
            "java": {
              "package": "software.amazon.awscdk.services.evidently"
            },
            "python": {
              "module": "aws_cdk.aws_evidently"
            }
          }
        },
        "aws-cdk-lib.aws_evs": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.EVS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.evs"
            },
            "python": {
              "module": "aws_cdk.aws_evs"
            }
          }
        },
        "aws-cdk-lib.aws_finspace": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FinSpace"
            },
            "java": {
              "package": "software.amazon.awscdk.services.finspace"
            },
            "python": {
              "module": "aws_cdk.aws_finspace"
            }
          }
        },
        "aws-cdk-lib.aws_fis": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FIS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fis"
            },
            "python": {
              "module": "aws_cdk.aws_fis"
            }
          }
        },
        "aws-cdk-lib.aws_fms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fms"
            },
            "python": {
              "module": "aws_cdk.aws_fms"
            }
          }
        },
        "aws-cdk-lib.aws_forecast": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Forecast"
            },
            "java": {
              "package": "software.amazon.awscdk.services.forecast"
            },
            "python": {
              "module": "aws_cdk.aws_forecast"
            }
          }
        },
        "aws-cdk-lib.aws_frauddetector": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FraudDetector"
            },
            "java": {
              "package": "software.amazon.awscdk.services.frauddetector"
            },
            "python": {
              "module": "aws_cdk.aws_frauddetector"
            }
          }
        },
        "aws-cdk-lib.aws_fsx": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FSx"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fsx"
            },
            "python": {
              "module": "aws_cdk.aws_fsx"
            }
          }
        },
        "aws-cdk-lib.aws_gamelift": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GameLift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.gamelift"
            },
            "python": {
              "module": "aws_cdk.aws_gamelift"
            }
          }
        },
        "aws-cdk-lib.aws_gameliftstreams": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.GameLiftStreams"
            },
            "java": {
              "package": "software.amazon.awscdk.services.gameliftstreams"
            },
            "python": {
              "module": "aws_cdk.aws_gameliftstreams"
            }
          }
        },
        "aws-cdk-lib.aws_globalaccelerator": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GlobalAccelerator"
            },
            "java": {
              "package": "software.amazon.awscdk.services.globalaccelerator"
            },
            "python": {
              "module": "aws_cdk.aws_globalaccelerator"
            }
          }
        },
        "aws-cdk-lib.aws_globalaccelerator_endpoints": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GlobalAccelerator.Endpoints"
            },
            "java": {
              "package": "software.amazon.awscdk.services.globalaccelerator.endpoints"
            },
            "python": {
              "module": "aws_cdk.aws_globalaccelerator_endpoints"
            }
          }
        },
        "aws-cdk-lib.aws_glue": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Glue"
            },
            "java": {
              "package": "software.amazon.awscdk.services.glue"
            },
            "python": {
              "module": "aws_cdk.aws_glue"
            }
          }
        },
        "aws-cdk-lib.aws_grafana": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Grafana"
            },
            "java": {
              "package": "software.amazon.awscdk.services.grafana"
            },
            "python": {
              "module": "aws_cdk.aws_grafana"
            }
          }
        },
        "aws-cdk-lib.aws_greengrass": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Greengrass"
            },
            "java": {
              "package": "software.amazon.awscdk.services.greengrass"
            },
            "python": {
              "module": "aws_cdk.aws_greengrass"
            }
          }
        },
        "aws-cdk-lib.aws_greengrassv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GreengrassV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.greengrassv2"
            },
            "python": {
              "module": "aws_cdk.aws_greengrassv2"
            }
          }
        },
        "aws-cdk-lib.aws_groundstation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GroundStation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.groundstation"
            },
            "python": {
              "module": "aws_cdk.aws_groundstation"
            }
          }
        },
        "aws-cdk-lib.aws_guardduty": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GuardDuty"
            },
            "java": {
              "package": "software.amazon.awscdk.services.guardduty"
            },
            "python": {
              "module": "aws_cdk.aws_guardduty"
            }
          }
        },
        "aws-cdk-lib.aws_healthimaging": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.HealthImaging"
            },
            "java": {
              "package": "software.amazon.awscdk.services.healthimaging"
            },
            "python": {
              "module": "aws_cdk.aws_healthimaging"
            }
          }
        },
        "aws-cdk-lib.aws_healthlake": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.HealthLake"
            },
            "java": {
              "package": "software.amazon.awscdk.services.healthlake"
            },
            "python": {
              "module": "aws_cdk.aws_healthlake"
            }
          }
        },
        "aws-cdk-lib.aws_iam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iam"
            },
            "python": {
              "module": "aws_cdk.aws_iam"
            }
          }
        },
        "aws-cdk-lib.aws_identitystore": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IdentityStore"
            },
            "java": {
              "package": "software.amazon.awscdk.services.identitystore"
            },
            "python": {
              "module": "aws_cdk.aws_identitystore"
            }
          }
        },
        "aws-cdk-lib.aws_imagebuilder": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ImageBuilder"
            },
            "java": {
              "package": "software.amazon.awscdk.services.imagebuilder"
            },
            "python": {
              "module": "aws_cdk.aws_imagebuilder"
            }
          }
        },
        "aws-cdk-lib.aws_inspector": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Inspector"
            },
            "java": {
              "package": "software.amazon.awscdk.services.inspector"
            },
            "python": {
              "module": "aws_cdk.aws_inspector"
            }
          }
        },
        "aws-cdk-lib.aws_inspectorv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.InspectorV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.inspectorv2"
            },
            "python": {
              "module": "aws_cdk.aws_inspectorv2"
            }
          }
        },
        "aws-cdk-lib.aws_internetmonitor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.InternetMonitor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.internetmonitor"
            },
            "python": {
              "module": "aws_cdk.aws_internetmonitor"
            }
          }
        },
        "aws-cdk-lib.aws_invoicing": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Invoicing"
            },
            "java": {
              "package": "software.amazon.awscdk.services.invoicing"
            },
            "python": {
              "module": "aws_cdk.aws_invoicing"
            }
          }
        },
        "aws-cdk-lib.aws_iot": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoT"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iot"
            },
            "python": {
              "module": "aws_cdk.aws_iot"
            }
          }
        },
        "aws-cdk-lib.aws_iotanalytics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTAnalytics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotanalytics"
            },
            "python": {
              "module": "aws_cdk.aws_iotanalytics"
            }
          }
        },
        "aws-cdk-lib.aws_iotcoredeviceadvisor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTCoreDeviceAdvisor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotcoredeviceadvisor"
            },
            "python": {
              "module": "aws_cdk.aws_iotcoredeviceadvisor"
            }
          }
        },
        "aws-cdk-lib.aws_iotevents": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTEvents"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotevents"
            },
            "python": {
              "module": "aws_cdk.aws_iotevents"
            }
          }
        },
        "aws-cdk-lib.aws_iotfleethub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTFleetHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotfleethub"
            },
            "python": {
              "module": "aws_cdk.aws_iotfleethub"
            }
          }
        },
        "aws-cdk-lib.aws_iotfleetwise": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTFleetWise"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotfleetwise"
            },
            "python": {
              "module": "aws_cdk.aws_iotfleetwise"
            }
          }
        },
        "aws-cdk-lib.aws_iotsitewise": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTSiteWise"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotsitewise"
            },
            "python": {
              "module": "aws_cdk.aws_iotsitewise"
            }
          }
        },
        "aws-cdk-lib.aws_iotthingsgraph": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTThingsGraph"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotthingsgraph"
            },
            "python": {
              "module": "aws_cdk.aws_iotthingsgraph"
            }
          }
        },
        "aws-cdk-lib.aws_iottwinmaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTTwinMaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iottwinmaker"
            },
            "python": {
              "module": "aws_cdk.aws_iottwinmaker"
            }
          }
        },
        "aws-cdk-lib.aws_iotwireless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTWireless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotwireless"
            },
            "python": {
              "module": "aws_cdk.aws_iotwireless"
            }
          }
        },
        "aws-cdk-lib.aws_ivs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Ivs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ivs"
            },
            "python": {
              "module": "aws_cdk.aws_ivs"
            }
          }
        },
        "aws-cdk-lib.aws_ivschat": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IVSChat"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ivschat"
            },
            "python": {
              "module": "aws_cdk.aws_ivschat"
            }
          }
        },
        "aws-cdk-lib.aws_kafkaconnect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KafkaConnect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kafkaconnect"
            },
            "python": {
              "module": "aws_cdk.aws_kafkaconnect"
            }
          }
        },
        "aws-cdk-lib.aws_kendra": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Kendra"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kendra"
            },
            "python": {
              "module": "aws_cdk.aws_kendra"
            }
          }
        },
        "aws-cdk-lib.aws_kendraranking": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KendraRanking"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kendraranking"
            },
            "python": {
              "module": "aws_cdk.aws_kendraranking"
            }
          }
        },
        "aws-cdk-lib.aws_kinesis": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Kinesis"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesis"
            },
            "python": {
              "module": "aws_cdk.aws_kinesis"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisanalytics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisAnalytics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisanalytics"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisanalytics"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisanalyticsv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisAnalyticsV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisanalyticsv2"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisanalyticsv2"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisfirehose": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisFirehose"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisfirehose"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisfirehose"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisvideo": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisVideo"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisvideo"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisvideo"
            }
          }
        },
        "aws-cdk-lib.aws_kms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kms"
            },
            "python": {
              "module": "aws_cdk.aws_kms"
            }
          }
        },
        "aws-cdk-lib.aws_lakeformation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LakeFormation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lakeformation"
            },
            "python": {
              "module": "aws_cdk.aws_lakeformation"
            }
          }
        },
        "aws-cdk-lib.aws_lambda": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda"
            },
            "python": {
              "module": "aws_cdk.aws_lambda"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_destinations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.Destinations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.destinations"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_destinations"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_event_sources": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.EventSources"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.eventsources"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_event_sources"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_nodejs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.Nodejs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.nodejs"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_nodejs"
            }
          }
        },
        "aws-cdk-lib.aws_launchwizard": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.LaunchWizard"
            },
            "java": {
              "package": "software.amazon.awscdk.services.launchwizard"
            },
            "python": {
              "module": "aws_cdk.aws_launchwizard"
            }
          }
        },
        "aws-cdk-lib.aws_lex": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lex"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lex"
            },
            "python": {
              "module": "aws_cdk.aws_lex"
            }
          }
        },
        "aws-cdk-lib.aws_licensemanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LicenseManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.licensemanager"
            },
            "python": {
              "module": "aws_cdk.aws_licensemanager"
            }
          }
        },
        "aws-cdk-lib.aws_lightsail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lightsail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lightsail"
            },
            "python": {
              "module": "aws_cdk.aws_lightsail"
            }
          }
        },
        "aws-cdk-lib.aws_location": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Location"
            },
            "java": {
              "package": "software.amazon.awscdk.services.location"
            },
            "python": {
              "module": "aws_cdk.aws_location"
            }
          }
        },
        "aws-cdk-lib.aws_logs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Logs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.logs"
            },
            "python": {
              "module": "aws_cdk.aws_logs"
            }
          }
        },
        "aws-cdk-lib.aws_logs_destinations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Logs.Destinations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.logs.destinations"
            },
            "python": {
              "module": "aws_cdk.aws_logs_destinations"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutequipment": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutEquipment"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutequipment"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutequipment"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutmetrics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutMetrics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutmetrics"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutmetrics"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutvision": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutVision"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutvision"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutvision"
            }
          }
        },
        "aws-cdk-lib.aws_m2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.M2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.m2"
            },
            "python": {
              "module": "aws_cdk.aws_m2"
            }
          }
        },
        "aws-cdk-lib.aws_macie": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Macie"
            },
            "java": {
              "package": "software.amazon.awscdk.services.macie"
            },
            "python": {
              "module": "aws_cdk.aws_macie"
            }
          }
        },
        "aws-cdk-lib.aws_managedblockchain": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ManagedBlockchain"
            },
            "java": {
              "package": "software.amazon.awscdk.services.managedblockchain"
            },
            "python": {
              "module": "aws_cdk.aws_managedblockchain"
            }
          }
        },
        "aws-cdk-lib.aws_mediaconnect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaConnect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediaconnect"
            },
            "python": {
              "module": "aws_cdk.aws_mediaconnect"
            }
          }
        },
        "aws-cdk-lib.aws_mediaconvert": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaConvert"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediaconvert"
            },
            "python": {
              "module": "aws_cdk.aws_mediaconvert"
            }
          }
        },
        "aws-cdk-lib.aws_medialive": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaLive"
            },
            "java": {
              "package": "software.amazon.awscdk.services.medialive"
            },
            "python": {
              "module": "aws_cdk.aws_medialive"
            }
          }
        },
        "aws-cdk-lib.aws_mediapackage": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaPackage"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediapackage"
            },
            "python": {
              "module": "aws_cdk.aws_mediapackage"
            }
          }
        },
        "aws-cdk-lib.aws_mediapackagev2": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.MediaPackageV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediapackagev2"
            },
            "python": {
              "module": "aws_cdk.aws_mediapackagev2"
            }
          }
        },
        "aws-cdk-lib.aws_mediastore": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaStore"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediastore"
            },
            "python": {
              "module": "aws_cdk.aws_mediastore"
            }
          }
        },
        "aws-cdk-lib.aws_mediatailor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaTailor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediatailor"
            },
            "python": {
              "module": "aws_cdk.aws_mediatailor"
            }
          }
        },
        "aws-cdk-lib.aws_memorydb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MemoryDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.memorydb"
            },
            "python": {
              "module": "aws_cdk.aws_memorydb"
            }
          }
        },
        "aws-cdk-lib.aws_mpa": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.MPA"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mpa"
            },
            "python": {
              "module": "aws_cdk.aws_mpa"
            }
          }
        },
        "aws-cdk-lib.aws_msk": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MSK"
            },
            "java": {
              "package": "software.amazon.awscdk.services.msk"
            },
            "python": {
              "module": "aws_cdk.aws_msk"
            }
          }
        },
        "aws-cdk-lib.aws_mwaa": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MWAA"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mwaa"
            },
            "python": {
              "module": "aws_cdk.aws_mwaa"
            }
          }
        },
        "aws-cdk-lib.aws_neptune": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Neptune"
            },
            "java": {
              "package": "software.amazon.awscdk.services.neptune"
            },
            "python": {
              "module": "aws_cdk.aws_neptune"
            }
          }
        },
        "aws-cdk-lib.aws_neptunegraph": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.NeptuneGraph"
            },
            "java": {
              "package": "software.amazon.awscdk.services.neptunegraph"
            },
            "python": {
              "module": "aws_cdk.aws_neptunegraph"
            }
          }
        },
        "aws-cdk-lib.aws_networkfirewall": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NetworkFirewall"
            },
            "java": {
              "package": "software.amazon.awscdk.services.networkfirewall"
            },
            "python": {
              "module": "aws_cdk.aws_networkfirewall"
            }
          }
        },
        "aws-cdk-lib.aws_networkmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NetworkManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.networkmanager"
            },
            "python": {
              "module": "aws_cdk.aws_networkmanager"
            }
          }
        },
        "aws-cdk-lib.aws_nimblestudio": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NimbleStudio"
            },
            "java": {
              "package": "software.amazon.awscdk.services.nimblestudio"
            },
            "python": {
              "module": "aws_cdk.aws_nimblestudio"
            }
          }
        },
        "aws-cdk-lib.aws_notifications": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Notifications"
            },
            "java": {
              "package": "software.amazon.awscdk.services.notifications"
            },
            "python": {
              "module": "aws_cdk.aws_notifications"
            }
          }
        },
        "aws-cdk-lib.aws_notificationscontacts": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.NotificationsContacts"
            },
            "java": {
              "package": "software.amazon.awscdk.services.notificationscontacts"
            },
            "python": {
              "module": "aws_cdk.aws_notificationscontacts"
            }
          }
        },
        "aws-cdk-lib.aws_oam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Oam"
            },
            "java": {
              "package": "software.amazon.awscdk.services.oam"
            },
            "python": {
              "module": "aws_cdk.aws_oam"
            }
          }
        },
        "aws-cdk-lib.aws_observabilityadmin": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.ObservabilityAdmin"
            },
            "java": {
              "package": "software.amazon.awscdk.services.observabilityadmin"
            },
            "python": {
              "module": "aws_cdk.aws_observabilityadmin"
            }
          }
        },
        "aws-cdk-lib.aws_odb": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.ODB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.odb"
            },
            "python": {
              "module": "aws_cdk.aws_odb"
            }
          }
        },
        "aws-cdk-lib.aws_omics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Omics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.omics"
            },
            "python": {
              "module": "aws_cdk.aws_omics"
            }
          }
        },
        "aws-cdk-lib.aws_opensearchserverless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpenSearchServerless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opensearchserverless"
            },
            "python": {
              "module": "aws_cdk.aws_opensearchserverless"
            }
          }
        },
        "aws-cdk-lib.aws_opensearchservice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpenSearchService"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opensearchservice"
            },
            "python": {
              "module": "aws_cdk.aws_opensearchservice"
            }
          }
        },
        "aws-cdk-lib.aws_opsworks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpsWorks"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opsworks"
            },
            "python": {
              "module": "aws_cdk.aws_opsworks"
            }
          }
        },
        "aws-cdk-lib.aws_opsworkscm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpsWorksCM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opsworkscm"
            },
            "python": {
              "module": "aws_cdk.aws_opsworkscm"
            }
          }
        },
        "aws-cdk-lib.aws_organizations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Organizations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.organizations"
            },
            "python": {
              "module": "aws_cdk.aws_organizations"
            }
          }
        },
        "aws-cdk-lib.aws_osis": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.OSIS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.osis"
            },
            "python": {
              "module": "aws_cdk.aws_osis"
            }
          }
        },
        "aws-cdk-lib.aws_panorama": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Panorama"
            },
            "java": {
              "package": "software.amazon.awscdk.services.panorama"
            },
            "python": {
              "module": "aws_cdk.aws_panorama"
            }
          }
        },
        "aws-cdk-lib.aws_paymentcryptography": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.PaymentCryptography"
            },
            "java": {
              "package": "software.amazon.awscdk.services.paymentcryptography"
            },
            "python": {
              "module": "aws_cdk.aws_paymentcryptography"
            }
          }
        },
        "aws-cdk-lib.aws_pcaconnectorad": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.PCAConnectorAD"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pcaconnectorad"
            },
            "python": {
              "module": "aws_cdk.aws_pcaconnectorad"
            }
          }
        },
        "aws-cdk-lib.aws_pcaconnectorscep": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.PCAConnectorSCEP"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pcaconnectorscep"
            },
            "python": {
              "module": "aws_cdk.aws_pcaconnectorscep"
            }
          }
        },
        "aws-cdk-lib.aws_pcs": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.PCS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pcs"
            },
            "python": {
              "module": "aws_cdk.aws_pcs"
            }
          }
        },
        "aws-cdk-lib.aws_personalize": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Personalize"
            },
            "java": {
              "package": "software.amazon.awscdk.services.personalize"
            },
            "python": {
              "module": "aws_cdk.aws_personalize"
            }
          }
        },
        "aws-cdk-lib.aws_pinpoint": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Pinpoint"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pinpoint"
            },
            "python": {
              "module": "aws_cdk.aws_pinpoint"
            }
          }
        },
        "aws-cdk-lib.aws_pinpointemail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.PinpointEmail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pinpointemail"
            },
            "python": {
              "module": "aws_cdk.aws_pinpointemail"
            }
          }
        },
        "aws-cdk-lib.aws_pipes": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Pipes"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pipes"
            },
            "python": {
              "module": "aws_cdk.aws_pipes"
            }
          }
        },
        "aws-cdk-lib.aws_proton": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Proton"
            },
            "java": {
              "package": "software.amazon.awscdk.services.proton"
            },
            "python": {
              "module": "aws_cdk.aws_proton"
            }
          }
        },
        "aws-cdk-lib.aws_qbusiness": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.QBusiness"
            },
            "java": {
              "package": "software.amazon.awscdk.services.qbusiness"
            },
            "python": {
              "module": "aws_cdk.aws_qbusiness"
            }
          }
        },
        "aws-cdk-lib.aws_qldb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.QLDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.qldb"
            },
            "python": {
              "module": "aws_cdk.aws_qldb"
            }
          }
        },
        "aws-cdk-lib.aws_quicksight": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.QuickSight"
            },
            "java": {
              "package": "software.amazon.awscdk.services.quicksight"
            },
            "python": {
              "module": "aws_cdk.aws_quicksight"
            }
          }
        },
        "aws-cdk-lib.aws_ram": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ram"
            },
            "python": {
              "module": "aws_cdk.aws_ram"
            }
          }
        },
        "aws-cdk-lib.aws_rbin": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Rbin"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rbin"
            },
            "python": {
              "module": "aws_cdk.aws_rbin"
            }
          }
        },
        "aws-cdk-lib.aws_rds": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RDS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rds"
            },
            "python": {
              "module": "aws_cdk.aws_rds"
            }
          }
        },
        "aws-cdk-lib.aws_redshift": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Redshift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.redshift"
            },
            "python": {
              "module": "aws_cdk.aws_redshift"
            }
          }
        },
        "aws-cdk-lib.aws_redshiftserverless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RedshiftServerless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.redshiftserverless"
            },
            "python": {
              "module": "aws_cdk.aws_redshiftserverless"
            }
          }
        },
        "aws-cdk-lib.aws_refactorspaces": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RefactorSpaces"
            },
            "java": {
              "package": "software.amazon.awscdk.services.refactorspaces"
            },
            "python": {
              "module": "aws_cdk.aws_refactorspaces"
            }
          }
        },
        "aws-cdk-lib.aws_rekognition": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Rekognition"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rekognition"
            },
            "python": {
              "module": "aws_cdk.aws_rekognition"
            }
          }
        },
        "aws-cdk-lib.aws_resiliencehub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResilienceHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resiliencehub"
            },
            "python": {
              "module": "aws_cdk.aws_resiliencehub"
            }
          }
        },
        "aws-cdk-lib.aws_resourceexplorer2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResourceExplorer2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resourceexplorer2"
            },
            "python": {
              "module": "aws_cdk.aws_resourceexplorer2"
            }
          }
        },
        "aws-cdk-lib.aws_resourcegroups": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResourceGroups"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resourcegroups"
            },
            "python": {
              "module": "aws_cdk.aws_resourcegroups"
            }
          }
        },
        "aws-cdk-lib.aws_robomaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RoboMaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.robomaker"
            },
            "python": {
              "module": "aws_cdk.aws_robomaker"
            }
          }
        },
        "aws-cdk-lib.aws_rolesanywhere": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RolesAnywhere"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rolesanywhere"
            },
            "python": {
              "module": "aws_cdk.aws_rolesanywhere"
            }
          }
        },
        "aws-cdk-lib.aws_route53": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53"
            },
            "python": {
              "module": "aws_cdk.aws_route53"
            }
          }
        },
        "aws-cdk-lib.aws_route53_patterns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53.Patterns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53.patterns"
            },
            "python": {
              "module": "aws_cdk.aws_route53_patterns"
            }
          }
        },
        "aws-cdk-lib.aws_route53_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53.targets"
            },
            "python": {
              "module": "aws_cdk.aws_route53_targets"
            }
          }
        },
        "aws-cdk-lib.aws_route53profiles": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Route53Profiles"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53profiles"
            },
            "python": {
              "module": "aws_cdk.aws_route53profiles"
            }
          }
        },
        "aws-cdk-lib.aws_route53recoverycontrol": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53RecoveryControl"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53recoverycontrol"
            },
            "python": {
              "module": "aws_cdk.aws_route53recoverycontrol"
            }
          }
        },
        "aws-cdk-lib.aws_route53recoveryreadiness": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53RecoveryReadiness"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53recoveryreadiness"
            },
            "python": {
              "module": "aws_cdk.aws_route53recoveryreadiness"
            }
          }
        },
        "aws-cdk-lib.aws_route53resolver": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53Resolver"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53resolver"
            },
            "python": {
              "module": "aws_cdk.aws_route53resolver"
            }
          }
        },
        "aws-cdk-lib.aws_rum": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RUM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rum"
            },
            "python": {
              "module": "aws_cdk.aws_rum"
            }
          }
        },
        "aws-cdk-lib.aws_s3": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3"
            },
            "python": {
              "module": "aws_cdk.aws_s3"
            }
          }
        },
        "aws-cdk-lib.aws_s3_assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.assets"
            },
            "python": {
              "module": "aws_cdk.aws_s3_assets"
            }
          }
        },
        "aws-cdk-lib.aws_s3_deployment": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Deployment"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.deployment"
            },
            "python": {
              "module": "aws_cdk.aws_s3_deployment"
            }
          }
        },
        "aws-cdk-lib.aws_s3_notifications": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Notifications"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.notifications"
            },
            "python": {
              "module": "aws_cdk.aws_s3_notifications"
            }
          }
        },
        "aws-cdk-lib.aws_s3express": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.S3Express"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3express"
            },
            "python": {
              "module": "aws_cdk.aws_s3express"
            }
          }
        },
        "aws-cdk-lib.aws_s3objectlambda": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3ObjectLambda"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3objectlambda"
            },
            "python": {
              "module": "aws_cdk.aws_s3objectlambda"
            }
          }
        },
        "aws-cdk-lib.aws_s3outposts": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3Outposts"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3outposts"
            },
            "python": {
              "module": "aws_cdk.aws_s3outposts"
            }
          }
        },
        "aws-cdk-lib.aws_s3tables": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.S3Tables"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3tables"
            },
            "python": {
              "module": "aws_cdk.aws_s3tables"
            }
          }
        },
        "aws-cdk-lib.aws_sagemaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Sagemaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sagemaker"
            },
            "python": {
              "module": "aws_cdk.aws_sagemaker"
            }
          }
        },
        "aws-cdk-lib.aws_sam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sam"
            },
            "python": {
              "module": "aws_cdk.aws_sam"
            }
          }
        },
        "aws-cdk-lib.aws_scheduler": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Scheduler"
            },
            "java": {
              "package": "software.amazon.awscdk.services.scheduler"
            },
            "python": {
              "module": "aws_cdk.aws_scheduler"
            }
          }
        },
        "aws-cdk-lib.aws_scheduler_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Scheduler.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.scheduler.targets"
            },
            "python": {
              "module": "aws_cdk.aws_scheduler_targets"
            }
          }
        },
        "aws-cdk-lib.aws_sdb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sdb"
            },
            "python": {
              "module": "aws_cdk.aws_sdb"
            }
          }
        },
        "aws-cdk-lib.aws_secretsmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SecretsManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.secretsmanager"
            },
            "python": {
              "module": "aws_cdk.aws_secretsmanager"
            }
          }
        },
        "aws-cdk-lib.aws_securityhub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SecurityHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.securityhub"
            },
            "python": {
              "module": "aws_cdk.aws_securityhub"
            }
          }
        },
        "aws-cdk-lib.aws_securitylake": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.SecurityLake"
            },
            "java": {
              "package": "software.amazon.awscdk.services.securitylake"
            },
            "python": {
              "module": "aws_cdk.aws_securitylake"
            }
          }
        },
        "aws-cdk-lib.aws_servicecatalog": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Servicecatalog"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicecatalog"
            },
            "python": {
              "module": "aws_cdk.aws_servicecatalog"
            }
          }
        },
        "aws-cdk-lib.aws_servicecatalogappregistry": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Servicecatalogappregistry"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicecatalogappregistry"
            },
            "python": {
              "module": "aws_cdk.aws_servicecatalogappregistry"
            }
          }
        },
        "aws-cdk-lib.aws_servicediscovery": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ServiceDiscovery"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicediscovery"
            },
            "python": {
              "module": "aws_cdk.aws_servicediscovery"
            }
          }
        },
        "aws-cdk-lib.aws_ses": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SES"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ses"
            },
            "python": {
              "module": "aws_cdk.aws_ses"
            }
          }
        },
        "aws-cdk-lib.aws_ses_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SES.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ses.actions"
            },
            "python": {
              "module": "aws_cdk.aws_ses_actions"
            }
          }
        },
        "aws-cdk-lib.aws_shield": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Shield"
            },
            "java": {
              "package": "software.amazon.awscdk.services.shield"
            },
            "python": {
              "module": "aws_cdk.aws_shield"
            }
          }
        },
        "aws-cdk-lib.aws_signer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Signer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.signer"
            },
            "python": {
              "module": "aws_cdk.aws_signer"
            }
          }
        },
        "aws-cdk-lib.aws_simspaceweaver": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SimSpaceWeaver"
            },
            "java": {
              "package": "software.amazon.awscdk.services.simspaceweaver"
            },
            "python": {
              "module": "aws_cdk.aws_simspaceweaver"
            }
          }
        },
        "aws-cdk-lib.aws_sns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SNS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sns"
            },
            "python": {
              "module": "aws_cdk.aws_sns"
            }
          }
        },
        "aws-cdk-lib.aws_sns_subscriptions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SNS.Subscriptions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sns.subscriptions"
            },
            "python": {
              "module": "aws_cdk.aws_sns_subscriptions"
            }
          }
        },
        "aws-cdk-lib.aws_sqs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SQS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sqs"
            },
            "python": {
              "module": "aws_cdk.aws_sqs"
            }
          }
        },
        "aws-cdk-lib.aws_ssm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssm"
            },
            "python": {
              "module": "aws_cdk.aws_ssm"
            }
          }
        },
        "aws-cdk-lib.aws_ssmcontacts": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSMContacts"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmcontacts"
            },
            "python": {
              "module": "aws_cdk.aws_ssmcontacts"
            }
          }
        },
        "aws-cdk-lib.aws_ssmguiconnect": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.SSMGuiConnect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmguiconnect"
            },
            "python": {
              "module": "aws_cdk.aws_ssmguiconnect"
            }
          }
        },
        "aws-cdk-lib.aws_ssmincidents": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSMIncidents"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmincidents"
            },
            "python": {
              "module": "aws_cdk.aws_ssmincidents"
            }
          }
        },
        "aws-cdk-lib.aws_ssmquicksetup": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.SSMQuickSetup"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmquicksetup"
            },
            "python": {
              "module": "aws_cdk.aws_ssmquicksetup"
            }
          }
        },
        "aws-cdk-lib.aws_sso": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSO"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sso"
            },
            "python": {
              "module": "aws_cdk.aws_sso"
            }
          }
        },
        "aws-cdk-lib.aws_stepfunctions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.StepFunctions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.stepfunctions"
            },
            "python": {
              "module": "aws_cdk.aws_stepfunctions"
            }
          }
        },
        "aws-cdk-lib.aws_stepfunctions_tasks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.StepFunctions.Tasks"
            },
            "java": {
              "package": "software.amazon.awscdk.services.stepfunctions.tasks"
            },
            "python": {
              "module": "aws_cdk.aws_stepfunctions_tasks"
            }
          }
        },
        "aws-cdk-lib.aws_supportapp": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SupportApp"
            },
            "java": {
              "package": "software.amazon.awscdk.services.supportapp"
            },
            "python": {
              "module": "aws_cdk.aws_supportapp"
            }
          }
        },
        "aws-cdk-lib.aws_synthetics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Synthetics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.synthetics"
            },
            "python": {
              "module": "aws_cdk.aws_synthetics"
            }
          }
        },
        "aws-cdk-lib.aws_systemsmanagersap": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SystemsManagerSAP"
            },
            "java": {
              "package": "software.amazon.awscdk.services.systemsmanagersap"
            },
            "python": {
              "module": "aws_cdk.aws_systemsmanagersap"
            }
          }
        },
        "aws-cdk-lib.aws_timestream": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Timestream"
            },
            "java": {
              "package": "software.amazon.awscdk.services.timestream"
            },
            "python": {
              "module": "aws_cdk.aws_timestream"
            }
          }
        },
        "aws-cdk-lib.aws_transfer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Transfer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.transfer"
            },
            "python": {
              "module": "aws_cdk.aws_transfer"
            }
          }
        },
        "aws-cdk-lib.aws_verifiedpermissions": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.VerifiedPermissions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.verifiedpermissions"
            },
            "python": {
              "module": "aws_cdk.aws_verifiedpermissions"
            }
          }
        },
        "aws-cdk-lib.aws_voiceid": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.VoiceID"
            },
            "java": {
              "package": "software.amazon.awscdk.services.voiceid"
            },
            "python": {
              "module": "aws_cdk.aws_voiceid"
            }
          }
        },
        "aws-cdk-lib.aws_vpclattice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.VpcLattice"
            },
            "java": {
              "package": "software.amazon.awscdk.services.vpclattice"
            },
            "python": {
              "module": "aws_cdk.aws_vpclattice"
            }
          }
        },
        "aws-cdk-lib.aws_waf": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAF"
            },
            "java": {
              "package": "software.amazon.awscdk.services.waf"
            },
            "python": {
              "module": "aws_cdk.aws_waf"
            }
          }
        },
        "aws-cdk-lib.aws_wafregional": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAFRegional"
            },
            "java": {
              "package": "software.amazon.awscdk.services.waf.regional"
            },
            "python": {
              "module": "aws_cdk.aws_wafregional"
            }
          }
        },
        "aws-cdk-lib.aws_wafv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAFv2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.wafv2"
            },
            "python": {
              "module": "aws_cdk.aws_wafv2"
            }
          }
        },
        "aws-cdk-lib.aws_wisdom": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Wisdom"
            },
            "java": {
              "package": "software.amazon.awscdk.services.wisdom"
            },
            "python": {
              "module": "aws_cdk.aws_wisdom"
            }
          }
        },
        "aws-cdk-lib.aws_workspaces": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WorkSpaces"
            },
            "java": {
              "package": "software.amazon.awscdk.services.workspaces"
            },
            "python": {
              "module": "aws_cdk.aws_workspaces"
            }
          }
        },
        "aws-cdk-lib.aws_workspacesinstances": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.WorkspacesInstances"
            },
            "java": {
              "package": "software.amazon.awscdk.services.workspacesinstances"
            },
            "python": {
              "module": "aws_cdk.aws_workspacesinstances"
            }
          }
        },
        "aws-cdk-lib.aws_workspacesthinclient": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.WorkSpacesThinClient"
            },
            "java": {
              "package": "software.amazon.awscdk.services.workspacesthinclient"
            },
            "python": {
              "module": "aws_cdk.aws_workspacesthinclient"
            }
          }
        },
        "aws-cdk-lib.aws_workspacesweb": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.WorkSpacesWeb"
            },
            "java": {
              "package": "software.amazon.awscdk.services.workspacesweb"
            },
            "python": {
              "module": "aws_cdk.aws_workspacesweb"
            }
          }
        },
        "aws-cdk-lib.aws_xray": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.XRay"
            },
            "java": {
              "package": "software.amazon.awscdk.services.xray"
            },
            "python": {
              "module": "aws_cdk.aws_xray"
            }
          }
        },
        "aws-cdk-lib.cloud_assembly_schema": {},
        "aws-cdk-lib.cloudformation_include": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CloudFormation.Include"
            },
            "java": {
              "package": "software.amazon.awscdk.cloudformation.include"
            },
            "python": {
              "module": "aws_cdk.cloudformation_include"
            }
          }
        },
        "aws-cdk-lib.custom_resources": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CustomResources"
            },
            "java": {
              "package": "software.amazon.awscdk.customresources"
            },
            "python": {
              "module": "aws_cdk.custom_resources"
            }
          }
        },
        "aws-cdk-lib.cx_api": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CXAPI"
            },
            "java": {
              "package": "software.amazon.awscdk.cxapi"
            },
            "python": {
              "module": "aws_cdk.cx_api"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_awscli": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.AwsCli"
            },
            "java": {
              "package": "software.amazon.awscdk.lambdalayer.awscli"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_awscli"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_node_proxy_agent": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.NodeProxyAgent"
            },
            "java": {
              "package": "software.amazon.awscdk.lambda.layer.node.proxy.agent"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_node_proxy_agent"
            }
          }
        },
        "aws-cdk-lib.pipelines": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Pipelines"
            },
            "java": {
              "package": "software.amazon.awscdk.pipelines"
            },
            "python": {
              "module": "aws_cdk.pipelines"
            }
          }
        },
        "aws-cdk-lib.region_info": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.RegionInfo"
            },
            "java": {
              "package": "software.amazon.awscdk.regioninfo"
            },
            "python": {
              "module": "aws_cdk.region_info"
            }
          }
        },
        "aws-cdk-lib.triggers": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Triggers"
            },
            "java": {
              "package": "software.amazon.awscdk.triggers"
            },
            "python": {
              "module": "aws_cdk.triggers"
            }
          }
        }
      },
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK.Lib"
        },
        "go": {
          "moduleName": "github.com/aws/aws-cdk-go",
          "packageName": "awscdk"
        },
        "java": {
          "maven": {
            "artifactId": "aws-cdk-lib",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk"
        },
        "js": {
          "npm": "aws-cdk-lib"
        },
        "python": {
          "distName": "aws-cdk-lib",
          "module": "aws_cdk"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "CDK Integration Testing Constructs",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "5.7.22 (build 1cfeabd)",
  "keywords": [
    "aws",
    "cdk"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/integ-tests-alpha",
  "readme": {
    "markdown": "# integ-tests\n\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\n## Overview\n\nThis library is meant to be used in combination with the [integ-runner](https://github.com/aws/aws-cdk-cli/tree/main/packages/%40aws-cdk/integ-runner) CLI\nto enable users to write and execute integration tests for AWS CDK Constructs.\n\nAn integration test should be defined as a CDK application, and\nthere should be a 1:1 relationship between an integration test and a CDK application.\n\nSo for example, in order to create an integration test called `my-function`\nwe would need to create a file to contain our integration test application.\n\n*test/integ.my-function.ts*\n\n```ts\nconst app = new App();\nconst stack = new Stack();\nnew lambda.Function(stack, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_LATEST,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n});\n```\n\nThis is a self contained CDK application which we could deploy by running\n\n```bash\ncdk deploy --app 'node test/integ.my-function.js'\n```\n\nIn order to turn this into an integration test, all that is needed is to\nuse the `IntegTest` construct.\n\n```ts\ndeclare const app: App;\ndeclare const stack: Stack;\nnew IntegTest(app, 'Integ', { testCases: [stack] });\n```\n\nYou will notice that the `stack` is registered to the `IntegTest` as a test case.\nEach integration test can contain multiple test cases, which are just instances\nof a stack. See the [Usage](#usage) section for more details.\n\n## Usage\n\n### IntegTest\n\nSuppose you have a simple stack, that only encapsulates a Lambda function with a\ncertain handler:\n\n```ts\ninterface StackUnderTestProps extends StackProps {\n  architecture?: lambda.Architecture;\n}\n\nclass StackUnderTest extends Stack {\n  constructor(scope: Construct, id: string, props: StackUnderTestProps) {\n    super(scope, id, props);\n\n    new lambda.Function(this, 'Handler', {\n      runtime: lambda.Runtime.NODEJS_LATEST,\n      handler: 'index.handler',\n      code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n      architecture: props.architecture,\n    });\n  }\n}\n```\n\nYou may want to test this stack under different conditions. For example, we want\nthis stack to be deployed correctly, regardless of the architecture we choose\nfor the Lambda function. In particular, it should work for both `ARM_64` and\n`X86_64`. So you can create an `IntegTestCase` that exercises both scenarios:\n\n```ts\ninterface StackUnderTestProps extends StackProps {\n  architecture?: lambda.Architecture;\n}\n\nclass StackUnderTest extends Stack {\n  constructor(scope: Construct, id: string, props: StackUnderTestProps) {\n    super(scope, id, props);\n\n    new lambda.Function(this, 'Handler', {\n      runtime: lambda.Runtime.NODEJS_LATEST,\n      handler: 'index.handler',\n      code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n      architecture: props.architecture,\n    });\n  }\n}\n\n// Beginning of the test suite\nconst app = new App();\n\nnew IntegTest(app, 'DifferentArchitectures', {\n  testCases: [\n    new StackUnderTest(app, 'Stack1', {\n      architecture: lambda.Architecture.ARM_64,\n    }),\n    new StackUnderTest(app, 'Stack2', {\n      architecture: lambda.Architecture.X86_64,\n    }),\n  ],\n});\n```\n\nThis is all the instruction you need for the integration test runner to know\nwhich stacks to synthesize, deploy and destroy. But you may also need to\ncustomize the behavior of the runner by changing its parameters. For example:\n\n```ts\nconst app = new App();\n\nconst stackUnderTest = new Stack(app, 'StackUnderTest', /* ... */);\n\nconst stack = new Stack(app, 'stack');\n\nconst testCase = new IntegTest(app, 'CustomizedDeploymentWorkflow', {\n  testCases: [stackUnderTest],\n  diffAssets: true,\n  stackUpdateWorkflow: true,\n  cdkCommandOptions: {\n    deploy: {\n      args: {\n        requireApproval: RequireApproval.NEVER,\n        json: true,\n      },\n    },\n    destroy: {\n      args: {\n        force: true,\n      },\n    },\n  },\n});\n```\n\n### IntegTestCaseStack\n\nIn the majority of cases an integration test will contain a single `IntegTestCase`.\nBy default when you create an `IntegTest` an `IntegTestCase` is created for you\nand all of your test cases are registered to this `IntegTestCase`. The `IntegTestCase`\nand `IntegTestCaseStack` constructs are only needed when it is necessary to\ndefined different options for individual test cases.\n\nFor example, you might want to have one test case where `diffAssets` is enabled.\n\n```ts\ndeclare const app: App;\ndeclare const stackUnderTest: Stack;\nconst testCaseWithAssets = new IntegTestCaseStack(app, 'TestCaseAssets', {\n  diffAssets: true,\n});\n\nnew IntegTest(app, 'Integ', { testCases: [stackUnderTest, testCaseWithAssets] });\n```\n\n## Assertions\n\nThis library also provides a utility to make assertions against the infrastructure that the integration test deploys.\n\nThere are two main scenarios in which assertions are created.\n\n- Part of an integration test using `integ-runner`\n\nIn this case you would create an integration test using the `IntegTest` construct and then make assertions using the `assert` property.\nYou should **not** utilize the assertion constructs directly, but should instead use the `methods` on `IntegTest.assertions`.\n\n```ts\ndeclare const app: App;\ndeclare const stack: Stack;\n\nconst integ = new IntegTest(app, 'Integ', { testCases: [stack] });\ninteg.assertions.awsApiCall('S3', 'getObject');\n```\n\nBy default an assertions stack is automatically generated for you. You may however provide your own stack to use.\n\n```ts\ndeclare const app: App;\ndeclare const stack: Stack;\ndeclare const assertionStack: Stack;\n\nconst integ = new IntegTest(app, 'Integ', { testCases: [stack], assertionStack: assertionStack });\ninteg.assertions.awsApiCall('S3', 'getObject');\n```\n\n- Part of a  normal CDK deployment\n\nIn this case you may be using assertions as part of a normal CDK deployment in order to make an assertion on the infrastructure\nbefore the deployment is considered successful. In this case you can utilize the assertions constructs directly.\n\n```ts\ndeclare const myAppStack: Stack;\n\nnew AwsApiCall(myAppStack, 'GetObject', {\n  service: 'S3',\n  api: 'getObject',\n});\n```\n\n### DeployAssert\n\nAssertions are created by using the `DeployAssert` construct. This construct creates it's own `Stack` separate from\nany stacks that you create as part of your integration tests. This `Stack` is treated differently from other stacks\nby the `integ-runner` tool. For example, this stack will not be diffed by the `integ-runner`.\n\n`DeployAssert` also provides utilities to register your own assertions.\n\n```ts\ndeclare const myCustomResource: CustomResource;\ndeclare const stack: Stack;\ndeclare const app: App;\n\nconst integ = new IntegTest(app, 'Integ', { testCases: [stack] });\ninteg.assertions.expect(\n  'CustomAssertion',\n  ExpectedResult.objectLike({ foo: 'bar' }),\n  ActualResult.fromCustomResource(myCustomResource, 'data'),\n);\n```\n\nIn the above example an assertion is created that will trigger a user defined `CustomResource`\nand assert that the `data` attribute is equal to `{ foo: 'bar' }`.\n\n### API Calls\n\nA common method to retrieve the \"actual\" results to compare with what is expected is to make an\nAPI call to receive some data. This library does this by utilizing CloudFormation custom resources\nwhich means that CloudFormation will call out to a Lambda Function which will\nmake the API call.\n\n#### HttpApiCall\n\nUsing the `HttpApiCall` will use the\n[node-fetch](https://github.com/node-fetch/node-fetch) JavaScript library to\nmake the HTTP call.\n\nThis can be done by using the class directory (in the case of a normal deployment):\n\n```ts\ndeclare const stack: Stack;\n\nnew HttpApiCall(stack, 'MyAsssertion', {\n  url: 'https://example-api.com/abc',\n});\n```\n\nOr by using the `httpApiCall` method on `DeployAssert` (when writing integration tests):\n\n```ts\ndeclare const app: App;\ndeclare const stack: Stack;\nconst integ = new IntegTest(app, 'Integ', {\n  testCases: [stack],\n});\ninteg.assertions.httpApiCall('https://example-api.com/abc');\n```\n\n#### AwsApiCall\n\nUsing the `AwsApiCall` construct will use the AWS JavaScript SDK to make the API call.\n\nThis can be done by using the class directory (in the case of a normal deployment):\n\n```ts\ndeclare const stack: Stack;\n\nnew AwsApiCall(stack, 'MyAssertion', {\n  service: 'SQS',\n  api: 'receiveMessage',\n  parameters: {\n    QueueUrl: 'url',\n  },\n});\n```\n\nOr by using the `awsApiCall` method on `DeployAssert` (when writing integration tests):\n\n```ts\ndeclare const app: App;\ndeclare const stack: Stack;\nconst integ = new IntegTest(app, 'Integ', {\n  testCases: [stack],\n});\ninteg.assertions.awsApiCall('SQS', 'receiveMessage', {\n  QueueUrl: 'url',\n});\n```\n\nYou must specify the `service` and the `api` when using The `AwsApiCall` construct.\nThe `service` is the name of an AWS service, in one of the following forms:\n\n- An AWS SDK for JavaScript v3 package name (`@aws-sdk/client-api-gateway`)\n- An AWS SDK for JavaScript v3 client name (`api-gateway`)\n- An AWS SDK for JavaScript v2 constructor name (`APIGateway`)\n- A lowercase AWS SDK for JavaScript v2 constructor name (`apigateway`)\n\nThe `api` is the name of an AWS API call, in one of the following forms:\n\n- An API call name as found in the API Reference documentation (`GetObject`)\n- The API call name starting with a lowercase letter (`getObject`)\n- The AWS SDK for JavaScript v3 command class name (`GetObjectCommand`)\n\nBy default, the `AwsApiCall` construct will automatically add the correct IAM policies\nto allow the Lambda function to make the API call. It does this based on the `service`\nand `api` that is provided. In the above example the service is `SQS` and the api is\n`receiveMessage` so it will create a policy with `Action: 'sqs:ReceiveMessage`.\n\nThere are some cases where the permissions do not exactly match the service/api call, for\nexample the S3 `listObjectsV2` api. In these cases it is possible to add the correct policy\nby accessing the `provider` object.\n\n```ts\ndeclare const app: App;\ndeclare const stack: Stack;\ndeclare const integ: IntegTest;\n\nconst apiCall = integ.assertions.awsApiCall('S3', 'listObjectsV2', {\n  Bucket: 'mybucket',\n});\n\napiCall.provider.addToRolePolicy({\n  Effect: 'Allow',\n  Action: ['s3:GetObject', 's3:ListBucket'],\n  Resource: ['*'],\n});\n```\n\nWhen executing `waitForAssertion()`, it is necessary to add an IAM policy using `waiterProvider.addToRolePolicy()`.\nBecause `IApiCall` does not have a `waiterProvider` property, you need to cast it to `AwsApiCall`.\n\n```ts\ndeclare const integ: IntegTest;\n\nconst apiCall = integ.assertions.awsApiCall('S3', 'listObjectsV2', {\n  Bucket: 'mybucket',\n}).waitForAssertions() as AwsApiCall;\n\napiCall.waiterProvider?.addToRolePolicy({\n  Effect: 'Allow',\n  Action: ['s3:GetObject', 's3:ListBucket'],\n  Resource: ['*'],\n});\n```\n\nNote that addToRolePolicy() uses direct IAM JSON policy blobs, not a iam.PolicyStatement\nobject like you will see in the rest of the CDK.\n\n### EqualsAssertion\n\nThis library currently provides the ability to assert that two values are equal\nto one another by utilizing the `EqualsAssertion` class. This utilizes a Lambda\nbacked `CustomResource` which in tern uses the [Match](https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions.Match.html) utility from the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions-readme.html) library.\n\n\n```ts\ndeclare const app: App;\ndeclare const stack: Stack;\ndeclare const queue: sqs.Queue;\ndeclare const fn: lambda.IFunction;\n\nconst integ = new IntegTest(app, 'Integ', {\n  testCases: [stack],\n});\n\ninteg.assertions.invokeFunction({\n  functionName: fn.functionName,\n  invocationType: InvocationType.EVENT,\n  payload: JSON.stringify({ status: 'OK' }),\n});\n\nconst message = integ.assertions.awsApiCall('SQS', 'receiveMessage', {\n  QueueUrl: queue.queueUrl,\n  WaitTimeSeconds: 20,\n});\n\nmessage.assertAtPath('Messages.0.Body', ExpectedResult.objectLike({\n  requestContext: {\n    condition: 'Success',\n  },\n  requestPayload: {\n    status: 'OK',\n  },\n  responseContext: {\n    statusCode: 200,\n  },\n  responsePayload: 'success',\n}));\n```\n\n#### Match\n\n`integ-tests` also provides a `Match` utility similar to the `@aws-cdk/assertions` module. `Match`\ncan be used to construct the `ExpectedResult`. While the utility is similar, only a subset of methods are currently available on the `Match` utility of this module: `arrayWith`, `objectLike`, `stringLikeRegexp` and `serializedJson`.\n\n```ts\ndeclare const message: AwsApiCall;\n\nmessage.expect(ExpectedResult.objectLike({\n  Messages: Match.arrayWith([\n    {\n      Payload: Match.serializedJson({ key: 'value' }),\n    },\n    {\n\t  Body: {\n\t    Values: Match.arrayWith([{ Asdf: 3 }]),\n\t\tMessage: Match.stringLikeRegexp('message'),\n\t  },\n    },\n  ]),\n}));\n```\n\n### Examples\n\n#### Invoke a Lambda Function\n\nIn this example there is a Lambda Function that is invoked and\nwe assert that the payload that is returned is equal to '200'.\n\n```ts\ndeclare const lambdaFunction: lambda.IFunction;\ndeclare const app: App;\n\nconst stack = new Stack(app, 'cdk-integ-lambda-bundling');\n\nconst integ = new IntegTest(app, 'IntegTest', {\n  testCases: [stack],\n});\n\nconst invoke = integ.assertions.invokeFunction({\n  functionName: lambdaFunction.functionName,\n});\ninvoke.expect(ExpectedResult.objectLike({\n  Payload: '200',\n}));\n```\n\nThe above example will by default create a CloudWatch log group that's never\nexpired. If you want to configure it with custom log retention days, you need\nto specify the `logRetention` property.\n\n```ts\nimport * as logs from 'aws-cdk-lib/aws-logs';\n\ndeclare const lambdaFunction: lambda.IFunction;\ndeclare const app: App;\n\nconst stack = new Stack(app, 'cdk-integ-lambda-bundling');\n\nconst integ = new IntegTest(app, 'IntegTest', {\n  testCases: [stack],\n});\n\nconst invoke = integ.assertions.invokeFunction({\n  functionName: lambdaFunction.functionName,\n  logRetention: logs.RetentionDays.ONE_WEEK,\n});\n```\n\n#### Make an AWS API Call\n\nIn this example there is a StepFunctions state machine that is executed\nand then we assert that the result of the execution is successful.\n\n```ts\ndeclare const app: App;\ndeclare const stack: Stack;\ndeclare const sm: IStateMachine;\n\nconst testCase = new IntegTest(app, 'IntegTest', {\n  testCases: [stack],\n});\n\n// Start an execution\nconst start = testCase.assertions.awsApiCall('StepFunctions', 'startExecution', {\n  stateMachineArn: sm.stateMachineArn,\n});\n\n// describe the results of the execution\nconst describe = testCase.assertions.awsApiCall('StepFunctions', 'describeExecution', {\n  executionArn: start.getAttString('executionArn'),\n});\n\n// assert the results\ndescribe.expect(ExpectedResult.objectLike({\n  status: 'SUCCEEDED',\n}));\n```\n\n#### Chain ApiCalls\n\nSometimes it may be necessary to chain API Calls. Since each API call is its own resource, all you\nneed to do is add a dependency between the calls. There is an helper method `next` that can be used.\n\n```ts\ndeclare const integ: IntegTest;\n\ninteg.assertions.awsApiCall('S3', 'putObject', {\n  Bucket: 'amzn-s3-demo-bucket',\n  Key: 'my-key',\n  Body: 'helloWorld',\n}).next(integ.assertions.awsApiCall('S3', 'getObject', {\n  Bucket: 'amzn-s3-demo-bucket',\n  Key: 'my-key',\n}));\n```\n\n#### Wait for results\n\nA common use case when performing assertions is to wait for a condition to pass. Sometimes the thing\nthat you are asserting against is not done provisioning by the time the assertion runs. In these\ncases it is possible to run the assertion asynchronously by calling the `waitForAssertions()` method.\n\nTaking the example above of executing a StepFunctions state machine, depending on the complexity of\nthe state machine, it might take a while for it to complete.\n\n```ts\ndeclare const app: App;\ndeclare const stack: Stack;\ndeclare const sm: IStateMachine;\n\nconst testCase = new IntegTest(app, 'IntegTest', {\n  testCases: [stack],\n});\n\n// Start an execution\nconst start = testCase.assertions.awsApiCall('StepFunctions', 'startExecution', {\n  stateMachineArn: sm.stateMachineArn,\n});\n\n// describe the results of the execution\nconst describe = testCase.assertions.awsApiCall('StepFunctions', 'describeExecution', {\n  executionArn: start.getAttString('executionArn'),\n}).expect(ExpectedResult.objectLike({\n  status: 'SUCCEEDED',\n})).waitForAssertions();\n```\n\nWhen you call `waitForAssertions()` the assertion provider will continuously make the `awsApiCall` until the\n`ExpectedResult` is met. You can also control the parameters for waiting, for example:\n\n```ts\ndeclare const testCase: IntegTest;\ndeclare const start: IApiCall;\n\nconst describe = testCase.assertions.awsApiCall('StepFunctions', 'describeExecution', {\n  executionArn: start.getAttString('executionArn'),\n}).expect(ExpectedResult.objectLike({\n  status: 'SUCCEEDED',\n})).waitForAssertions({\n  totalTimeout: Duration.minutes(5),\n  interval: Duration.seconds(15),\n  backoffRate: 3,\n});\n```\n\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/integ-tests-alpha",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.IntegTests.Alpha",
      "packageId": "Amazon.CDK.IntegTests.Alpha"
    },
    "go": {
      "moduleName": "github.com/aws/aws-cdk-go",
      "packageName": "awscdkintegtestsalpha"
    },
    "java": {
      "maven": {
        "artifactId": "cdk-integ-tests-alpha",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.integtests.alpha"
    },
    "js": {
      "npm": "@aws-cdk/integ-tests-alpha"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 2"
      ],
      "distName": "aws-cdk.integ-tests-alpha",
      "module": "aws_cdk.integ_tests_alpha"
    }
  },
  "types": {
    "@aws-cdk/integ-tests-alpha.ActualResult": {
      "abstract": true,
      "assembly": "@aws-cdk/integ-tests-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Represents the \"actual\" results to compare.",
        "example": "declare const myCustomResource: CustomResource;\ndeclare const stack: Stack;\ndeclare const app: App;\n\nconst integ = new IntegTest(app, 'Integ', { testCases: [stack] });\ninteg.assertions.expect(\n  'CustomAssertion',\n  ExpectedResult.objectLike({ foo: 'bar' }),\n  ActualResult.fromCustomResource(myCustomResource, 'data'),\n);",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.ActualResult",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/assertions/common.ts",
        "line": 7
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Get the actual results from a AwsApiCall."
          },
          "locationInModule": {
            "filename": "lib/assertions/common.ts",
            "line": 20
          },
          "name": "fromAwsApiCall",
          "parameters": [
            {
              "name": "query",
              "type": {
                "fqn": "@aws-cdk/integ-tests-alpha.IApiCall"
              }
            },
            {
              "name": "attribute",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.ActualResult"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Get the actual results from a CustomResource."
          },
          "locationInModule": {
            "filename": "lib/assertions/common.ts",
            "line": 11
          },
          "name": "fromCustomResource",
          "parameters": [
            {
              "name": "customResource",
              "type": {
                "fqn": "aws-cdk-lib.CustomResource"
              }
            },
            {
              "name": "attribute",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.ActualResult"
            }
          },
          "static": true
        }
      ],
      "name": "ActualResult",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The actual results as a string."
          },
          "locationInModule": {
            "filename": "lib/assertions/common.ts",
            "line": 29
          },
          "name": "result",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/assertions/common:ActualResult"
    },
    "@aws-cdk/integ-tests-alpha.ApiCallBase": {
      "abstract": true,
      "assembly": "@aws-cdk/integ-tests-alpha",
      "base": "constructs.Construct",
      "docs": {
        "stability": "experimental",
        "summary": "Base class for an ApiCall."
      },
      "fqn": "@aws-cdk/integ-tests-alpha.ApiCallBase",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/assertions/api-call-base.ts",
          "line": 132
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/integ-tests-alpha.IApiCall"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/assertions/api-call-base.ts",
        "line": 123
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Providing a path will filter the output of the initial API call.\n\nFor example the SQS.receiveMessage api response would look\nlike:\n\nIf you wanted to assert the value of `Body` you could do",
            "stability": "experimental",
            "summary": "Assert that the ExpectedResult is equal to the result of the AwsApiCall at the given path."
          },
          "locationInModule": {
            "filename": "lib/assertions/api-call-base.ts",
            "line": 153
          },
          "name": "assertAtPath",
          "overrides": "@aws-cdk/integ-tests-alpha.IApiCall",
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "expected",
              "type": {
                "fqn": "@aws-cdk/integ-tests-alpha.ExpectedResult"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.IApiCall"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Assert that the ExpectedResult is equal to the result of the AwsApiCall."
          },
          "locationInModule": {
            "filename": "lib/assertions/api-call-base.ts",
            "line": 148
          },
          "name": "expect",
          "overrides": "@aws-cdk/integ-tests-alpha.IApiCall",
          "parameters": [
            {
              "name": "expected",
              "type": {
                "fqn": "@aws-cdk/integ-tests-alpha.ExpectedResult"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.IApiCall"
            }
          }
        },
        {
          "docs": {
            "remarks": "Attributes are returned from the custom resource provider through the\n`Data` map where the key is the attribute name.",
            "stability": "experimental",
            "summary": "Returns the value of an attribute of the custom resource of an arbitrary type."
          },
          "locationInModule": {
            "filename": "lib/assertions/api-call-base.ts",
            "line": 136
          },
          "name": "getAtt",
          "overrides": "@aws-cdk/integ-tests-alpha.IApiCall",
          "parameters": [
            {
              "name": "attributeName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.Reference"
            }
          }
        },
        {
          "docs": {
            "remarks": "Attributes are returned from the custom resource provider through the\n`Data` map where the key is the attribute name.",
            "stability": "experimental",
            "summary": "Returns the value of an attribute of the custom resource of type string."
          },
          "locationInModule": {
            "filename": "lib/assertions/api-call-base.ts",
            "line": 142
          },
          "name": "getAttString",
          "overrides": "@aws-cdk/integ-tests-alpha.IApiCall",
          "parameters": [
            {
              "name": "attributeName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "remarks": "Returns the IApiCall provided as `next`",
            "stability": "experimental",
            "summary": "Allows you to chain IApiCalls. This adds an explicit dependency betweent the two resources."
          },
          "locationInModule": {
            "filename": "lib/assertions/api-call-base.ts",
            "line": 155
          },
          "name": "next",
          "overrides": "@aws-cdk/integ-tests-alpha.IApiCall",
          "parameters": [
            {
              "name": "next",
              "type": {
                "fqn": "@aws-cdk/integ-tests-alpha.IApiCall"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.IApiCall"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If no expected response is specified then it will wait for\nthe IApiCall to return a success",
            "stability": "experimental",
            "summary": "Wait for the IApiCall to return the expected response."
          },
          "locationInModule": {
            "filename": "lib/assertions/api-call-base.ts",
            "line": 160
          },
          "name": "waitForAssertions",
          "overrides": "@aws-cdk/integ-tests-alpha.IApiCall",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/integ-tests-alpha.WaiterStateMachineOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.IApiCall"
            }
          }
        }
      ],
      "name": "ApiCallBase",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/api-call-base.ts",
            "line": 124
          },
          "name": "apiCallResource",
          "protected": true,
          "type": {
            "fqn": "aws-cdk-lib.CustomResource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This can be used to add additional IAM policies\nthe the provider role policy",
            "stability": "experimental",
            "summary": "access the AssertionsProvider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/api-call-base.ts",
            "line": 130
          },
          "name": "provider",
          "overrides": "@aws-cdk/integ-tests-alpha.IApiCall",
          "type": {
            "fqn": "@aws-cdk/integ-tests-alpha.AssertionsProvider"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/assertions/api-call-base.ts",
            "line": 126
          },
          "name": "flattenResponse",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/assertions/api-call-base.ts",
            "line": 125
          },
          "name": "expectedResult",
          "optional": true,
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/assertions/api-call-base.ts",
            "line": 128
          },
          "name": "outputPaths",
          "optional": true,
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/assertions/api-call-base.ts",
            "line": 127
          },
          "name": "stateMachineArn",
          "optional": true,
          "protected": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/assertions/api-call-base:ApiCallBase"
    },
    "@aws-cdk/integ-tests-alpha.AssertionRequest": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "A request to make an assertion that the actual value matches the expected.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as integ_tests_alpha from '@aws-cdk/integ-tests-alpha';\n\ndeclare const actual: any;\ndeclare const expected: any;\nconst assertionRequest: integ_tests_alpha.AssertionRequest = {\n  actual: actual,\n  expected: expected,\n\n  // the properties below are optional\n  failDeployment: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.AssertionRequest",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assertions/providers/lambda-handler/types.ts",
        "line": 207
      },
      "name": "AssertionRequest",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The actual value received."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 216
          },
          "name": "actual",
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The expected value to assert."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 211
          },
          "name": "expected",
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "This is only necessary if assertions are being\nexecuted outside of `integ-runner`.",
            "stability": "experimental",
            "summary": "Set this to true if a failed assertion should result in a CloudFormation deployment failure."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 227
          },
          "name": "failDeployment",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/assertions/providers/lambda-handler/types:AssertionRequest"
    },
    "@aws-cdk/integ-tests-alpha.AssertionResult": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "datatype": true,
      "docs": {
        "remarks": "Needed to access the whole message via getAtt() on the custom resource.",
        "stability": "experimental",
        "summary": "The result of an Assertion wrapping the actual result data in another struct.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as integ_tests_alpha from '@aws-cdk/integ-tests-alpha';\nconst assertionResult: integ_tests_alpha.AssertionResult = {\n  assertion: 'assertion',\n\n  // the properties below are optional\n  failed: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.AssertionResult",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assertions/providers/lambda-handler/types.ts",
        "line": 234
      },
      "name": "AssertionResult",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The result of an assertion."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 238
          },
          "name": "assertion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Whether or not the assertion failed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 245
          },
          "name": "failed",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/assertions/providers/lambda-handler/types:AssertionResult"
    },
    "@aws-cdk/integ-tests-alpha.AssertionResultData": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "The result of an assertion.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as integ_tests_alpha from '@aws-cdk/integ-tests-alpha';\nconst assertionResultData: integ_tests_alpha.AssertionResultData = {\n  status: integ_tests_alpha.Status.PASS,\n\n  // the properties below are optional\n  message: 'message',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.AssertionResultData",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assertions/providers/lambda-handler/types.ts",
        "line": 266
      },
      "name": "AssertionResultData",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The status of the assertion, i.e. pass or fail."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 271
          },
          "name": "status",
          "type": {
            "fqn": "@aws-cdk/integ-tests-alpha.Status"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "experimental",
            "summary": "Any message returned with the assertion result typically this will be the diff if there is any."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 279
          },
          "name": "message",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/assertions/providers/lambda-handler/types:AssertionResultData"
    },
    "@aws-cdk/integ-tests-alpha.AssertionType": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "The type of assertion to perform."
      },
      "fqn": "@aws-cdk/integ-tests-alpha.AssertionType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/assertions/providers/lambda-handler/types.ts",
        "line": 184
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Assert that two values are equal."
          },
          "name": "EQUALS"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The keys and their values must be present in the target but the target can be a superset."
          },
          "name": "OBJECT_LIKE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Matches the specified pattern with the array The set of elements must be in the same order as would be found."
          },
          "name": "ARRAY_WITH"
        }
      ],
      "name": "AssertionType",
      "symbolId": "lib/assertions/providers/lambda-handler/types:AssertionType"
    },
    "@aws-cdk/integ-tests-alpha.AssertionsProvider": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "base": "constructs.Construct",
      "docs": {
        "remarks": "The creates a singletone\nLambda Function that will create a single function per stack\nthat serves as the custom resource provider for the various\nassertion providers",
        "stability": "experimental",
        "summary": "Represents an assertions provider.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as integ_tests_alpha from '@aws-cdk/integ-tests-alpha';\nimport { aws_logs as logs } from 'aws-cdk-lib';\nconst assertionsProvider = new integ_tests_alpha.AssertionsProvider(this, 'MyAssertionsProvider', /* all optional props */ {\n  handler: 'handler',\n  logRetention: logs.RetentionDays.ONE_DAY,\n  uuid: 'uuid',\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.AssertionsProvider",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/assertions/providers/provider.ts",
          "line": 235
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.AssertionsProviderProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/assertions/providers/provider.ts",
        "line": 221
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Create a policy statement from a specific api call."
          },
          "locationInModule": {
            "filename": "lib/assertions/providers/provider.ts",
            "line": 276
          },
          "name": "addPolicyStatementFromSdkCall",
          "parameters": [
            {
              "name": "service",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "api",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "resources",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ]
        },
        {
          "docs": {
            "example": "declare const provider: AssertionsProvider;\nprovider.addToRolePolicy({\n  Effect: 'Allow',\n  Action: ['s3:GetObject'],\n  Resource: ['*'],\n});",
            "remarks": "**Please note**: this is a direct IAM JSON policy blob, *not* a `iam.PolicyStatement`\nobject like you will see in the rest of the CDK.",
            "stability": "experimental",
            "summary": "Add an IAM policy statement to the inline policy of the lambdas function's role."
          },
          "locationInModule": {
            "filename": "lib/assertions/providers/provider.ts",
            "line": 296
          },
          "name": "addToRolePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "Custom resources will convert\nall input parameters to strings so we encode non-strings here\nso we can then decode them correctly in the provider function",
            "stability": "experimental",
            "summary": "Encode an object so it can be passed as custom resource parameters."
          },
          "locationInModule": {
            "filename": "lib/assertions/providers/provider.ts",
            "line": 255
          },
          "name": "encode",
          "parameters": [
            {
              "name": "obj",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Grant a principal access to invoke the assertion provider lambda function."
          },
          "locationInModule": {
            "filename": "lib/assertions/providers/provider.ts",
            "line": 307
          },
          "name": "grantInvoke",
          "parameters": [
            {
              "docs": {
                "summary": "the ARN of the principal that should be given permission to invoke the assertion provider."
              },
              "name": "principalArn",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "AssertionsProvider",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "A reference to the provider Lambda Function execution Role ARN."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/provider.ts",
            "line": 231
          },
          "name": "handlerRoleArn",
          "type": {
            "fqn": "aws-cdk-lib.Reference"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The ARN of the lambda function which can be used as a serviceToken to a CustomResource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/provider.ts",
            "line": 226
          },
          "name": "serviceToken",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/assertions/providers/provider:AssertionsProvider"
    },
    "@aws-cdk/integ-tests-alpha.AssertionsProviderProps": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for defining an AssertionsProvider.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as integ_tests_alpha from '@aws-cdk/integ-tests-alpha';\nimport { aws_logs as logs } from 'aws-cdk-lib';\nconst assertionsProviderProps: integ_tests_alpha.AssertionsProviderProps = {\n  handler: 'handler',\n  logRetention: logs.RetentionDays.ONE_DAY,\n  uuid: 'uuid',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.AssertionsProviderProps",
      "interfaces": [
        "@aws-cdk/integ-tests-alpha.LambdaFunctionProviderProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assertions/providers/provider.ts",
        "line": 204
      },
      "name": "AssertionsProviderProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- the default uuid is used",
            "remarks": "You should only need to provide something different here if you\n_know_ that you need a separate provider",
            "stability": "experimental",
            "summary": "This determines the uniqueness of each AssertionsProvider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/provider.ts",
            "line": 212
          },
          "name": "uuid",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/assertions/providers/provider:AssertionsProviderProps"
    },
    "@aws-cdk/integ-tests-alpha.AwsApiCall": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "base": "@aws-cdk/integ-tests-alpha.ApiCallBase",
      "docs": {
        "stability": "experimental",
        "summary": "Construct that creates a custom resource that will perform a query using the AWS SDK.",
        "example": "declare const stack: Stack;\n\nnew AwsApiCall(stack, 'MyAssertion', {\n  service: 'SQS',\n  api: 'receiveMessage',\n  parameters: {\n    QueueUrl: 'url',\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.AwsApiCall",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/assertions/sdk.ts",
          "line": 76
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.AwsApiCallProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/assertions/sdk.ts",
        "line": 51
      },
      "methods": [
        {
          "docs": {
            "remarks": "Providing a path will filter the output of the initial API call.\n\nFor example the SQS.receiveMessage api response would look\nlike:\n\nIf you wanted to assert the value of `Body` you could do",
            "stability": "experimental",
            "summary": "Assert that the ExpectedResult is equal to the result of the AwsApiCall at the given path."
          },
          "locationInModule": {
            "filename": "lib/assertions/sdk.ts",
            "line": 131
          },
          "name": "assertAtPath",
          "overrides": "@aws-cdk/integ-tests-alpha.ApiCallBase",
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "expected",
              "type": {
                "fqn": "@aws-cdk/integ-tests-alpha.ExpectedResult"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.IApiCall"
            }
          }
        },
        {
          "docs": {
            "remarks": "If no expected response is specified then it will wait for\nthe IApiCall to return a success",
            "stability": "experimental",
            "summary": "Wait for the IApiCall to return the expected response."
          },
          "locationInModule": {
            "filename": "lib/assertions/sdk.ts",
            "line": 139
          },
          "name": "waitForAssertions",
          "overrides": "@aws-cdk/integ-tests-alpha.ApiCallBase",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/integ-tests-alpha.WaiterStateMachineOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.IApiCall"
            }
          }
        }
      ],
      "name": "AwsApiCall",
      "properties": [
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/sdk.ts",
            "line": 69
          },
          "name": "apiCallResource",
          "overrides": "@aws-cdk/integ-tests-alpha.ApiCallBase",
          "protected": true,
          "type": {
            "fqn": "aws-cdk-lib.CustomResource"
          }
        },
        {
          "docs": {
            "remarks": "This can be used to add additional IAM policies\nthe the provider role policy",
            "stability": "experimental",
            "summary": "access the AssertionsProvider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/sdk.ts",
            "line": 52
          },
          "name": "provider",
          "overrides": "@aws-cdk/integ-tests-alpha.ApiCallBase",
          "type": {
            "fqn": "@aws-cdk/integ-tests-alpha.AssertionsProvider"
          }
        },
        {
          "docs": {
            "example": "declare const apiCall: AwsApiCall;\napiCall.waiterProvider?.addToRolePolicy({\n  Effect: 'Allow',\n  Action: ['s3:GetObject'],\n  Resource: ['*'],\n});",
            "remarks": "This can be used to add additional IAM policies\nthe the provider role policy",
            "stability": "experimental",
            "summary": "access the AssertionsProvider for the waiter state machine."
          },
          "locationInModule": {
            "filename": "lib/assertions/sdk.ts",
            "line": 67
          },
          "name": "waiterProvider",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/integ-tests-alpha.AssertionsProvider"
          }
        }
      ],
      "symbolId": "lib/assertions/sdk:AwsApiCall"
    },
    "@aws-cdk/integ-tests-alpha.AwsApiCallOptions": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Options to perform an AWS JavaScript V2 API call.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as integ_tests_alpha from '@aws-cdk/integ-tests-alpha';\n\ndeclare const parameters: any;\nconst awsApiCallOptions: integ_tests_alpha.AwsApiCallOptions = {\n  api: 'api',\n  service: 'service',\n\n  // the properties below are optional\n  outputPaths: ['outputPaths'],\n  parameters: parameters,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.AwsApiCallOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assertions/sdk.ts",
        "line": 12
      },
      "name": "AwsApiCallOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The api call to make, i.e. getBucketLifecycle."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/sdk.ts",
            "line": 21
          },
          "name": "api",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The AWS service, i.e. S3."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/sdk.ts",
            "line": 16
          },
          "name": "service",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- return all data",
            "remarks": "Use this to limit the data returned by the custom\nresource if working with API calls that could potentially result in custom\nresponse objects exceeding the hard limit of 4096 bytes.",
            "stability": "experimental",
            "summary": "Restrict the data returned by the API call to specific paths in the API response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/sdk.ts",
            "line": 38
          },
          "name": "outputPaths",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no parameters",
            "stability": "experimental",
            "summary": "Any parameters to pass to the api call."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/sdk.ts",
            "line": 28
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "lib/assertions/sdk:AwsApiCallOptions"
    },
    "@aws-cdk/integ-tests-alpha.AwsApiCallProps": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Construct that creates a custom resource that will perform a query using the AWS SDK.",
        "example": "declare const myAppStack: Stack;\n\nnew AwsApiCall(myAppStack, 'GetObject', {\n  service: 'S3',\n  api: 'getObject',\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.AwsApiCallProps",
      "interfaces": [
        "@aws-cdk/integ-tests-alpha.AwsApiCallOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assertions/sdk.ts",
        "line": 45
      },
      "name": "AwsApiCallProps",
      "symbolId": "lib/assertions/sdk:AwsApiCallProps"
    },
    "@aws-cdk/integ-tests-alpha.AwsApiCallRequest": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "A AWS JavaScript SDK V2 request.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as integ_tests_alpha from '@aws-cdk/integ-tests-alpha';\n\ndeclare const parameters: any;\nconst awsApiCallRequest: integ_tests_alpha.AwsApiCallRequest = {\n  api: 'api',\n  service: 'service',\n\n  // the properties below are optional\n  flattenResponse: 'flattenResponse',\n  outputPaths: ['outputPaths'],\n  parameters: parameters,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.AwsApiCallRequest",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assertions/providers/lambda-handler/types.ts",
        "line": 124
      },
      "name": "AwsApiCallRequest",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The AWS api call to make i.e. getBucketLifecycle."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 133
          },
          "name": "api",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The AWS service i.e. S3."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 128
          },
          "name": "service",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'false'",
            "remarks": "Valid values are 'true' or 'false' as strings\n\nTypically when using an SdkRequest you will be passing it as the\n`actual` value to an assertion provider so this would be set\nto 'false' (you want the actual response).\n\nIf you are using the SdkRequest to perform more of a query to return\na single value to use, then this should be set to 'true'. For example,\nyou could make a StepFunctions.startExecution api call and retrieve the\n`executionArn` from the response.",
            "stability": "experimental",
            "summary": "Whether or not to flatten the response from the api call."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 158
          },
          "name": "flattenResponse",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- return all data",
            "remarks": "Use this to limit the data returned by the custom\nresource if working with API calls that could potentially result in custom\nresponse objects exceeding the hard limit of 4096 bytes.",
            "stability": "experimental",
            "summary": "Restrict the data returned by the API call to specific paths in the API response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 168
          },
          "name": "outputPaths",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no parameters",
            "stability": "experimental",
            "summary": "Any parameters to pass to the api call."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 140
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "lib/assertions/providers/lambda-handler/types:AwsApiCallRequest"
    },
    "@aws-cdk/integ-tests-alpha.AwsApiCallResult": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "The result from a SdkQuery.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as integ_tests_alpha from '@aws-cdk/integ-tests-alpha';\n\ndeclare const apiCallResponse: any;\nconst awsApiCallResult: integ_tests_alpha.AwsApiCallResult = {\n  apiCallResponse: apiCallResponse,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.AwsApiCallResult",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assertions/providers/lambda-handler/types.ts",
        "line": 174
      },
      "name": "AwsApiCallResult",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The full api response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 178
          },
          "name": "apiCallResponse",
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "lib/assertions/providers/lambda-handler/types:AwsApiCallResult"
    },
    "@aws-cdk/integ-tests-alpha.EqualsAssertion": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "base": "constructs.Construct",
      "docs": {
        "stability": "experimental",
        "summary": "Construct that creates a CustomResource to assert that two values are equal.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as integ_tests_alpha from '@aws-cdk/integ-tests-alpha';\n\ndeclare const actualResult: integ_tests_alpha.ActualResult;\ndeclare const expectedResult: integ_tests_alpha.ExpectedResult;\nconst equalsAssertion = new integ_tests_alpha.EqualsAssertion(this, 'MyEqualsAssertion', {\n  actual: actualResult,\n  expected: expectedResult,\n\n  // the properties below are optional\n  failDeployment: false,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.EqualsAssertion",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/assertions/assertions.ts",
          "line": 43
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.EqualsAssertionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/assertions/assertions.ts",
        "line": 37
      },
      "name": "EqualsAssertion",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The result of the assertion."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/assertions.ts",
            "line": 41
          },
          "name": "result",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/assertions/assertions:EqualsAssertion"
    },
    "@aws-cdk/integ-tests-alpha.EqualsAssertionProps": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Options for an EqualsAssertion.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as integ_tests_alpha from '@aws-cdk/integ-tests-alpha';\n\ndeclare const actualResult: integ_tests_alpha.ActualResult;\ndeclare const expectedResult: integ_tests_alpha.ExpectedResult;\nconst equalsAssertionProps: integ_tests_alpha.EqualsAssertionProps = {\n  actual: actualResult,\n  expected: expectedResult,\n\n  // the properties below are optional\n  failDeployment: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.EqualsAssertionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assertions/assertions.ts",
        "line": 10
      },
      "name": "EqualsAssertionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The actual results to compare."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/assertions.ts",
            "line": 14
          },
          "name": "actual",
          "type": {
            "fqn": "@aws-cdk/integ-tests-alpha.ActualResult"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The expected result to assert."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/assertions.ts",
            "line": 19
          },
          "name": "expected",
          "type": {
            "fqn": "@aws-cdk/integ-tests-alpha.ExpectedResult"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "This is only necessary if assertions are being\nexecuted outside of `integ-runner`.",
            "stability": "experimental",
            "summary": "Set this to true if a failed assertion should result in a CloudFormation deployment failure."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/assertions.ts",
            "line": 30
          },
          "name": "failDeployment",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/assertions/assertions:EqualsAssertionProps"
    },
    "@aws-cdk/integ-tests-alpha.ExpectedResult": {
      "abstract": true,
      "assembly": "@aws-cdk/integ-tests-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Represents the \"expected\" results to compare.",
        "example": "declare const app: App;\ndeclare const stack: Stack;\ndeclare const sm: IStateMachine;\n\nconst testCase = new IntegTest(app, 'IntegTest', {\n  testCases: [stack],\n});\n\n// Start an execution\nconst start = testCase.assertions.awsApiCall('StepFunctions', 'startExecution', {\n  stateMachineArn: sm.stateMachineArn,\n});\n\n// describe the results of the execution\nconst describe = testCase.assertions.awsApiCall('StepFunctions', 'describeExecution', {\n  executionArn: start.getAttString('executionArn'),\n});\n\n// assert the results\ndescribe.expect(ExpectedResult.objectLike({\n  status: 'SUCCEEDED',\n}));",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.ExpectedResult",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/assertions/common.ts",
        "line": 35
      },
      "methods": [
        {
          "docs": {
            "example": "// actual results\nconst actual = [\n  {\n    stringParam: 'hello',\n  },\n  {\n    stringParam: 'world',\n  },\n];\n// pass\nExpectedResult.arrayWith([\n  {\n    stringParam: 'hello',\n  },\n]);",
            "see": "https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions.Match.html#static-arraywbrwithpattern",
            "stability": "experimental",
            "summary": "The actual results must be a list and must contain an item with the expected results."
          },
          "locationInModule": {
            "filename": "lib/assertions/common.ts",
            "line": 120
          },
          "name": "arrayWith",
          "parameters": [
            {
              "name": "expected",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.ExpectedResult"
            }
          },
          "static": true
        },
        {
          "docs": {
            "example": "// actual results\nconst actual = {\n  stringParam: 'hello',\n  numberParam: 3,\n  booleanParam: true,\n};\n// pass\nExpectedResult.exact({\n  stringParam: 'hello',\n  numberParam: 3,\n  booleanParam: true,\n})\n\n// fail\nExpectedResult.exact({\n  stringParam: 'hello',\n});",
            "remarks": "Missing data\nwill result in a failure",
            "see": "https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions.Match.html#static-exactpattern",
            "stability": "experimental",
            "summary": "The actual results must match exactly."
          },
          "locationInModule": {
            "filename": "lib/assertions/common.ts",
            "line": 61
          },
          "name": "exact",
          "parameters": [
            {
              "name": "expected",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.ExpectedResult"
            }
          },
          "static": true
        },
        {
          "docs": {
            "example": "// actual results\nconst actual = {\n  stringParam: 'hello',\n  numberParam: 3,\n  booleanParam: true,\n  objectParam: { prop1: 'value', prop2: 'value' },\n};\n// pass\nExpectedResult.objectLike({\n  stringParam: 'hello',\n  objectParam: { prop1: 'value' },\n});",
            "see": "https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions.Match.html#static-objectwbrlikepattern",
            "stability": "experimental",
            "summary": "The expected results must be a subset of the actual results."
          },
          "locationInModule": {
            "filename": "lib/assertions/common.ts",
            "line": 89
          },
          "name": "objectLike",
          "parameters": [
            {
              "name": "expected",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.ExpectedResult"
            }
          },
          "static": true
        },
        {
          "docs": {
            "example": "// actual results\nconst actual = 'some string value';\n\n// pass\nExpectedResult.stringLikeRegexp('value');",
            "see": "https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions.Match.html#static-stringwbrlikewbrregexppattern",
            "stability": "experimental",
            "summary": "Actual results is a string that matches the Expected result regex."
          },
          "locationInModule": {
            "filename": "lib/assertions/common.ts",
            "line": 140
          },
          "name": "stringLikeRegexp",
          "parameters": [
            {
              "name": "expected",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.ExpectedResult"
            }
          },
          "static": true
        }
      ],
      "name": "ExpectedResult",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The expected results encoded as a string."
          },
          "locationInModule": {
            "filename": "lib/assertions/common.ts",
            "line": 151
          },
          "name": "result",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/assertions/common:ExpectedResult"
    },
    "@aws-cdk/integ-tests-alpha.FetchOptions": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Options to pass to the JavaScript fetch api.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as integ_tests_alpha from '@aws-cdk/integ-tests-alpha';\nconst fetchOptions: integ_tests_alpha.FetchOptions = {\n  body: 'body',\n  headers: {\n    headersKey: 'headers',\n  },\n  method: 'method',\n  port: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.FetchOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assertions/providers/lambda-handler/types.ts",
        "line": 49
      },
      "name": "FetchOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no body",
            "stability": "experimental",
            "summary": "Request body."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 55
          },
          "name": "body",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "no headers",
            "stability": "experimental",
            "summary": "Optional request headers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 76
          },
          "name": "headers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "GET",
            "stability": "experimental",
            "summary": "HTTP method."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 69
          },
          "name": "method",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "default port for protocol",
            "stability": "experimental",
            "summary": "Optional port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 62
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/assertions/providers/lambda-handler/types:FetchOptions"
    },
    "@aws-cdk/integ-tests-alpha.HttpApiCall": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "base": "@aws-cdk/integ-tests-alpha.ApiCallBase",
      "docs": {
        "stability": "experimental",
        "summary": "Construct that creates a custom resource that will perform an HTTP API Call.",
        "example": "declare const stack: Stack;\n\nnew HttpApiCall(stack, 'MyAsssertion', {\n  url: 'https://example-api.com/abc',\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.HttpApiCall",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/assertions/http-call.ts",
          "line": 20
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.HttpCallProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/assertions/http-call.ts",
        "line": 16
      },
      "methods": [
        {
          "docs": {
            "remarks": "Providing a path will filter the output of the initial API call.\n\nFor example the SQS.receiveMessage api response would look\nlike:\n\nIf you wanted to assert the value of `Body` you could do",
            "stability": "experimental",
            "summary": "Assert that the ExpectedResult is equal to the result of the AwsApiCall at the given path."
          },
          "locationInModule": {
            "filename": "lib/assertions/http-call.ts",
            "line": 58
          },
          "name": "assertAtPath",
          "overrides": "@aws-cdk/integ-tests-alpha.ApiCallBase",
          "parameters": [
            {
              "name": "_path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "_expected",
              "type": {
                "fqn": "@aws-cdk/integ-tests-alpha.ExpectedResult"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.IApiCall"
            }
          }
        },
        {
          "docs": {
            "remarks": "If no expected response is specified then it will wait for\nthe IApiCall to return a success",
            "stability": "experimental",
            "summary": "Wait for the IApiCall to return the expected response."
          },
          "locationInModule": {
            "filename": "lib/assertions/http-call.ts",
            "line": 61
          },
          "name": "waitForAssertions",
          "overrides": "@aws-cdk/integ-tests-alpha.ApiCallBase",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/integ-tests-alpha.WaiterStateMachineOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.IApiCall"
            }
          }
        }
      ],
      "name": "HttpApiCall",
      "properties": [
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/http-call.ts",
            "line": 17
          },
          "name": "apiCallResource",
          "overrides": "@aws-cdk/integ-tests-alpha.ApiCallBase",
          "protected": true,
          "type": {
            "fqn": "aws-cdk-lib.CustomResource"
          }
        },
        {
          "docs": {
            "remarks": "This can be used to add additional IAM policies\nthe the provider role policy",
            "stability": "experimental",
            "summary": "access the AssertionsProvider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/http-call.ts",
            "line": 18
          },
          "name": "provider",
          "overrides": "@aws-cdk/integ-tests-alpha.ApiCallBase",
          "type": {
            "fqn": "@aws-cdk/integ-tests-alpha.AssertionsProvider"
          }
        }
      ],
      "symbolId": "lib/assertions/http-call:HttpApiCall"
    },
    "@aws-cdk/integ-tests-alpha.HttpCallProps": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Options for creating an HttpApiCall provider.",
        "example": "declare const stack: Stack;\n\nnew HttpApiCall(stack, 'MyAsssertion', {\n  url: 'https://example-api.com/abc',\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.HttpCallProps",
      "interfaces": [
        "@aws-cdk/integ-tests-alpha.HttpRequestParameters"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assertions/http-call.ts",
        "line": 11
      },
      "name": "HttpCallProps",
      "symbolId": "lib/assertions/http-call:HttpCallProps"
    },
    "@aws-cdk/integ-tests-alpha.HttpRequest": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Request to the HttpCall resource.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as integ_tests_alpha from '@aws-cdk/integ-tests-alpha';\nconst httpRequest: integ_tests_alpha.HttpRequest = {\n  parameters: {\n    url: 'url',\n\n    // the properties below are optional\n    fetchOptions: {\n      body: 'body',\n      headers: {\n        headersKey: 'headers',\n      },\n      method: 'method',\n      port: 123,\n    },\n  },\n\n  // the properties below are optional\n  flattenResponse: 'flattenResponse',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.HttpRequest",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assertions/providers/lambda-handler/types.ts",
        "line": 23
      },
      "name": "HttpRequest",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Parameters from the custom resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 27
          },
          "name": "parameters",
          "type": {
            "fqn": "@aws-cdk/integ-tests-alpha.HttpRequestParameters"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'false'",
            "remarks": "Valid values are 'true' or 'false' as strings\n\nTypically when using an HttpRequest you will be passing it as the\n`actual` value to an assertion provider so this would be set\nto 'false' (you want the actual response).\n\nIf you are using the HttpRequest to perform more of a query to return\na single value to use, then this should be set to 'true'.",
            "stability": "experimental",
            "summary": "Whether or not to flatten the response from the HTTP request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 43
          },
          "name": "flattenResponse",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/assertions/providers/lambda-handler/types:HttpRequest"
    },
    "@aws-cdk/integ-tests-alpha.HttpRequestParameters": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as integ_tests_alpha from '@aws-cdk/integ-tests-alpha';\nconst httpRequestParameters: integ_tests_alpha.HttpRequestParameters = {\n  url: 'url',\n\n  // the properties below are optional\n  fetchOptions: {\n    body: 'body',\n    headers: {\n      headersKey: 'headers',\n    },\n    method: 'method',\n    port: 123,\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.HttpRequestParameters",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assertions/providers/lambda-handler/types.ts",
        "line": 8
      },
      "name": "HttpRequestParameters",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The url to fetch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 12
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Options for fetch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 17
          },
          "name": "fetchOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/integ-tests-alpha.FetchOptions"
          }
        }
      ],
      "symbolId": "lib/assertions/providers/lambda-handler/types:HttpRequestParameters"
    },
    "@aws-cdk/integ-tests-alpha.HttpResponse": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Response from fetch.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as integ_tests_alpha from '@aws-cdk/integ-tests-alpha';\n\ndeclare const body: any;\ndeclare const headers: any;\nconst httpResponse: integ_tests_alpha.HttpResponse = {\n  body: body,\n  headers: {\n    headersKey: headers,\n  },\n  ok: false,\n  status: 123,\n  statusText: 'statusText',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.HttpResponse",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assertions/providers/lambda-handler/types.ts",
        "line": 92
      },
      "name": "HttpResponse",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The response, either as parsed JSON or a string literal."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 113
          },
          "name": "body",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Headers associated with the response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 118
          },
          "name": "headers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "status range 200-299",
            "stability": "experimental",
            "summary": "Indicates whether the response was successful."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 98
          },
          "name": "ok",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Status code of the response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 103
          },
          "name": "status",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The status message corresponding to the status code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 108
          },
          "name": "statusText",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/assertions/providers/lambda-handler/types:HttpResponse"
    },
    "@aws-cdk/integ-tests-alpha.HttpResponseWrapper": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Response from the HttpCall resource.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as integ_tests_alpha from '@aws-cdk/integ-tests-alpha';\n\ndeclare const body: any;\ndeclare const headers: any;\nconst httpResponseWrapper: integ_tests_alpha.HttpResponseWrapper = {\n  apiCallResponse: {\n    body: body,\n    headers: {\n      headersKey: headers,\n    },\n    ok: false,\n    status: 123,\n    statusText: 'statusText',\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.HttpResponseWrapper",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assertions/providers/lambda-handler/types.ts",
        "line": 82
      },
      "name": "HttpResponseWrapper",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The Response from the fetch request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/lambda-handler/types.ts",
            "line": 86
          },
          "name": "apiCallResponse",
          "type": {
            "fqn": "@aws-cdk/integ-tests-alpha.HttpResponse"
          }
        }
      ],
      "symbolId": "lib/assertions/providers/lambda-handler/types:HttpResponseWrapper"
    },
    "@aws-cdk/integ-tests-alpha.IApiCall": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Represents an ApiCall."
      },
      "fqn": "@aws-cdk/integ-tests-alpha.IApiCall",
      "interfaces": [
        "constructs.IConstruct"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assertions/api-call-base.ts",
        "line": 10
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "example": "const actual = {\n  Messages: [{\n    MessageId: '',\n    ReceiptHandle: '',\n    MD5OfBody: '',\n    Body: 'hello',\n    Attributes: {},\n    MD5OfMessageAttributes: {},\n    MessageAttributes: {}\n  }]\n};\n\n\ndeclare const integ: IntegTest;\nconst message = integ.assertions.awsApiCall('SQS', 'receiveMessage');\n\nmessage.assertAtPath('Messages.0.Body', ExpectedResult.stringLikeRegexp('hello'));",
            "remarks": "Providing a path will filter the output of the initial API call.\n\nFor example the SQS.receiveMessage api response would look\nlike:\n\nIf you wanted to assert the value of `Body` you could do",
            "stability": "experimental",
            "summary": "Assert that the ExpectedResult is equal to the result of the AwsApiCall at the given path."
          },
          "locationInModule": {
            "filename": "lib/assertions/api-call-base.ts",
            "line": 89
          },
          "name": "assertAtPath",
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "expected",
              "type": {
                "fqn": "@aws-cdk/integ-tests-alpha.ExpectedResult"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.IApiCall"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "declare const integ: IntegTest;\nconst invoke = integ.assertions.invokeFunction({\n  functionName: 'my-func',\n});\ninvoke.expect(ExpectedResult.objectLike({ Payload: 'OK' }));",
            "stability": "experimental",
            "summary": "Assert that the ExpectedResult is equal to the result of the AwsApiCall."
          },
          "locationInModule": {
            "filename": "lib/assertions/api-call-base.ts",
            "line": 57
          },
          "name": "expect",
          "parameters": [
            {
              "name": "expected",
              "type": {
                "fqn": "@aws-cdk/integ-tests-alpha.ExpectedResult"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.IApiCall"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Attributes are returned from the custom resource provider through the\n`Data` map where the key is the attribute name.",
            "returns": "a token for `Fn::GetAtt`. Use `Token.asXxx` to encode the returned `Reference` as a specific type or\nuse the convenience `getAttString` for string attributes.",
            "stability": "experimental",
            "summary": "Returns the value of an attribute of the custom resource of an arbitrary type."
          },
          "locationInModule": {
            "filename": "lib/assertions/api-call-base.ts",
            "line": 34
          },
          "name": "getAtt",
          "parameters": [
            {
              "docs": {
                "summary": "the name of the attribute."
              },
              "name": "attributeName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.Reference"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Attributes are returned from the custom resource provider through the\n`Data` map where the key is the attribute name.",
            "returns": "a token for `Fn::GetAtt` encoded as a string.",
            "stability": "experimental",
            "summary": "Returns the value of an attribute of the custom resource of type string."
          },
          "locationInModule": {
            "filename": "lib/assertions/api-call-base.ts",
            "line": 44
          },
          "name": "getAttString",
          "parameters": [
            {
              "docs": {
                "summary": "the name of the attribute."
              },
              "name": "attributeName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "declare const first: IApiCall;\ndeclare const second: IApiCall;\n\nfirst.next(second);",
            "remarks": "Returns the IApiCall provided as `next`",
            "stability": "experimental",
            "summary": "Allows you to chain IApiCalls. This adds an explicit dependency betweent the two resources."
          },
          "locationInModule": {
            "filename": "lib/assertions/api-call-base.ts",
            "line": 103
          },
          "name": "next",
          "parameters": [
            {
              "name": "next",
              "type": {
                "fqn": "@aws-cdk/integ-tests-alpha.IApiCall"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.IApiCall"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "declare const integ: IntegTest;\ndeclare const executionArn: string;\ninteg.assertions.awsApiCall('StepFunctions', 'describeExecution', {\n   executionArn,\n}).waitForAssertions();",
            "remarks": "If no expected response is specified then it will wait for\nthe IApiCall to return a success",
            "stability": "experimental",
            "summary": "Wait for the IApiCall to return the expected response."
          },
          "locationInModule": {
            "filename": "lib/assertions/api-call-base.ts",
            "line": 117
          },
          "name": "waitForAssertions",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/integ-tests-alpha.WaiterStateMachineOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.IApiCall"
            }
          }
        }
      ],
      "name": "IApiCall",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "example": "declare const apiCall: AwsApiCall;\napiCall.provider.addToRolePolicy({\n  Effect: 'Allow',\n  Action: ['s3:GetObject'],\n  Resource: ['*'],\n});",
            "remarks": "This can be used to add additional IAM policies\nthe the provider role policy",
            "stability": "experimental",
            "summary": "access the AssertionsProvider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/api-call-base.ts",
            "line": 23
          },
          "name": "provider",
          "type": {
            "fqn": "@aws-cdk/integ-tests-alpha.AssertionsProvider"
          }
        }
      ],
      "symbolId": "lib/assertions/api-call-base:IApiCall"
    },
    "@aws-cdk/integ-tests-alpha.IDeployAssert": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "docs": {
        "remarks": "This is only necessary\nwhen writing integration tests.",
        "stability": "experimental",
        "summary": "Interface that allows for registering a list of assertions that should be performed on a construct."
      },
      "fqn": "@aws-cdk/integ-tests-alpha.IDeployAssert",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assertions/types.ts",
        "line": 11
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "example": "declare const app: App;\ndeclare const integ: IntegTest;\ninteg.assertions.awsApiCall('SQS', 'sendMessage', {\n  QueueUrl: 'url',\n  MessageBody: 'hello',\n});\nconst message = integ.assertions.awsApiCall('SQS', 'receiveMessage', {\n  QueueUrl: 'url',\n});\nmessage.expect(ExpectedResult.objectLike({\n  Messages: [{ Body: 'hello' }],\n}));",
            "remarks": "This can be used to either\ntrigger an action or to return a result that can then be asserted against\nan expected value\n\nThe `service` is the name of an AWS service, in one of the following forms:\n- An AWS SDK for JavaScript v3 package name (`@aws-sdk/client-api-gateway`)\n- An AWS SDK for JavaScript v3 client name (`api-gateway`)\n- An AWS SDK for JavaScript v2 constructor name (`APIGateway`)\n- A lowercase AWS SDK for JavaScript v2 constructor name (`apigateway`)\n\nThe `api` is the name of an AWS API call, in one of the following forms:\n- An API call name as found in the API Reference documentation (`GetObject`)\n- The API call name starting with a lowercase letter (`getObject`)\n- The AWS SDK for JavaScript v3 command class name (`GetObjectCommand`)",
            "stability": "experimental",
            "summary": "Query AWS using JavaScript SDK API calls."
          },
          "locationInModule": {
            "filename": "lib/assertions/types.ts",
            "line": 42
          },
          "name": "awsApiCall",
          "parameters": [
            {
              "name": "service",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "api",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "parameters",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "outputPaths",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.IApiCall"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "declare const integ: IntegTest;\ndeclare const apiCall: AwsApiCall;\ninteg.assertions.expect(\n  'invoke',\n  ExpectedResult.objectLike({ Payload: 'OK' }),\n  ActualResult.fromAwsApiCall(apiCall, 'Body'),\n);",
            "stability": "experimental",
            "summary": "Assert that the ExpectedResult is equal to the ActualResult."
          },
          "locationInModule": {
            "filename": "lib/assertions/types.ts",
            "line": 85
          },
          "name": "expect",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "expected",
              "type": {
                "fqn": "@aws-cdk/integ-tests-alpha.ExpectedResult"
              }
            },
            {
              "name": "actual",
              "type": {
                "fqn": "@aws-cdk/integ-tests-alpha.ActualResult"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "example": "declare const app: App;\ndeclare const integ: IntegTest;\nconst call = integ.assertions.httpApiCall('https://example.com/test');\ncall.expect(ExpectedResult.objectLike({\n  Message: 'Hello World!',\n}));",
            "stability": "experimental",
            "summary": "Make an HTTP call to the provided endpoint."
          },
          "locationInModule": {
            "filename": "lib/assertions/types.ts",
            "line": 70
          },
          "name": "httpApiCall",
          "parameters": [
            {
              "name": "url",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/integ-tests-alpha.FetchOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.IApiCall"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "declare const app: App;\ndeclare const integ: IntegTest;\nconst invoke = integ.assertions.invokeFunction({\n  functionName: 'my-function',\n});\ninvoke.expect(ExpectedResult.objectLike({\n  Payload: '200',\n}));",
            "stability": "experimental",
            "summary": "Invoke a lambda function and return the response which can be asserted."
          },
          "locationInModule": {
            "filename": "lib/assertions/types.ts",
            "line": 57
          },
          "name": "invokeFunction",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/integ-tests-alpha.LambdaInvokeFunctionProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.IApiCall"
            }
          }
        }
      ],
      "name": "IDeployAssert",
      "symbolId": "lib/assertions/types:IDeployAssert"
    },
    "@aws-cdk/integ-tests-alpha.IntegTest": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "base": "constructs.Construct",
      "docs": {
        "remarks": "Each test case file should contain exactly one\ninstance of this class.",
        "stability": "experimental",
        "summary": "A collection of test cases.",
        "example": "declare const app: App;\ndeclare const stack: Stack;\ndeclare const sm: IStateMachine;\n\nconst testCase = new IntegTest(app, 'IntegTest', {\n  testCases: [stack],\n});\n\n// Start an execution\nconst start = testCase.assertions.awsApiCall('StepFunctions', 'startExecution', {\n  stateMachineArn: sm.stateMachineArn,\n});\n\n// describe the results of the execution\nconst describe = testCase.assertions.awsApiCall('StepFunctions', 'describeExecution', {\n  executionArn: start.getAttString('executionArn'),\n});\n\n// assert the results\ndescribe.expect(ExpectedResult.objectLike({\n  status: 'SUCCEEDED',\n}));",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.IntegTest",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/test-case.ts",
          "line": 154
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.IntegTestProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/test-case.ts",
        "line": 147
      },
      "name": "IntegTest",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Make assertions on resources in this test case."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/test-case.ts",
            "line": 151
          },
          "name": "assertions",
          "type": {
            "fqn": "@aws-cdk/integ-tests-alpha.IDeployAssert"
          }
        }
      ],
      "symbolId": "lib/test-case:IntegTest"
    },
    "@aws-cdk/integ-tests-alpha.IntegTestCase": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "base": "constructs.Construct",
      "docs": {
        "remarks": "It is recommended that you use the IntegTest construct since that will create\na default IntegTestCase",
        "stability": "experimental",
        "summary": "An integration test case. Allows the definition of test properties that apply to all stacks under this case.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as integ_tests_alpha from '@aws-cdk/integ-tests-alpha';\nimport * as cdk from 'aws-cdk-lib';\nimport { cloud_assembly_schema } from 'aws-cdk-lib';\n\ndeclare const stack: cdk.Stack;\nconst integTestCase = new integ_tests_alpha.IntegTestCase(this, 'MyIntegTestCase', {\n  stacks: [stack],\n\n  // the properties below are optional\n  allowDestroy: ['allowDestroy'],\n  assertionStack: stack,\n  cdkCommandOptions: {\n    deploy: {\n      args: {\n        all: false,\n        app: 'app',\n        assetMetadata: false,\n        caBundlePath: 'caBundlePath',\n        changeSetName: 'changeSetName',\n        ci: false,\n        color: false,\n        concurrency: 123,\n        context: {\n          contextKey: 'context',\n        },\n        debug: false,\n        ec2Creds: false,\n        exclusively: false,\n        execute: false,\n        force: false,\n        ignoreErrors: false,\n        json: false,\n        lookups: false,\n        notices: false,\n        notificationArns: ['notificationArns'],\n        output: 'output',\n        outputsFile: 'outputsFile',\n        parameters: {\n          parametersKey: 'parameters',\n        },\n        pathMetadata: false,\n        profile: 'profile',\n        proxy: 'proxy',\n        requireApproval: cloud_assembly_schema.RequireApproval.NEVER,\n        reuseAssets: ['reuseAssets'],\n        roleArn: 'roleArn',\n        rollback: false,\n        stacks: ['stacks'],\n        staging: false,\n        strict: false,\n        toolkitStackName: 'toolkitStackName',\n        trace: false,\n        usePreviousParameters: false,\n        verbose: false,\n        versionReporting: false,\n      },\n      enabled: false,\n      expectedMessage: 'expectedMessage',\n      expectError: false,\n    },\n    destroy: {\n      args: {\n        all: false,\n        app: 'app',\n        assetMetadata: false,\n        caBundlePath: 'caBundlePath',\n        color: false,\n        context: {\n          contextKey: 'context',\n        },\n        debug: false,\n        ec2Creds: false,\n        exclusively: false,\n        force: false,\n        ignoreErrors: false,\n        json: false,\n        lookups: false,\n        notices: false,\n        output: 'output',\n        pathMetadata: false,\n        profile: 'profile',\n        proxy: 'proxy',\n        roleArn: 'roleArn',\n        stacks: ['stacks'],\n        staging: false,\n        strict: false,\n        trace: false,\n        verbose: false,\n        versionReporting: false,\n      },\n      enabled: false,\n      expectedMessage: 'expectedMessage',\n      expectError: false,\n    },\n  },\n  diffAssets: false,\n  hooks: {\n    postDeploy: ['postDeploy'],\n    postDestroy: ['postDestroy'],\n    preDeploy: ['preDeploy'],\n    preDestroy: ['preDestroy'],\n  },\n  regions: ['regions'],\n  stackUpdateWorkflow: false,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.IntegTestCase",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/test-case.ts",
          "line": 42
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.IntegTestCaseProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/test-case.ts",
        "line": 34
      },
      "name": "IntegTestCase",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Make assertions on resources in this test case."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/test-case.ts",
            "line": 38
          },
          "name": "assertions",
          "type": {
            "fqn": "@aws-cdk/integ-tests-alpha.IDeployAssert"
          }
        },
        {
          "docs": {
            "remarks": "Manifests are used\nby the integration test runner.",
            "stability": "experimental",
            "summary": "The integration test manifest for this test case."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/test-case.ts",
            "line": 53
          },
          "name": "manifest",
          "type": {
            "fqn": "aws-cdk-lib.cloud_assembly_schema.IntegManifest"
          }
        }
      ],
      "symbolId": "lib/test-case:IntegTestCase"
    },
    "@aws-cdk/integ-tests-alpha.IntegTestCaseProps": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties of an integration test case.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as integ_tests_alpha from '@aws-cdk/integ-tests-alpha';\nimport * as cdk from 'aws-cdk-lib';\nimport { cloud_assembly_schema } from 'aws-cdk-lib';\n\ndeclare const stack: cdk.Stack;\nconst integTestCaseProps: integ_tests_alpha.IntegTestCaseProps = {\n  stacks: [stack],\n\n  // the properties below are optional\n  allowDestroy: ['allowDestroy'],\n  assertionStack: stack,\n  cdkCommandOptions: {\n    deploy: {\n      args: {\n        all: false,\n        app: 'app',\n        assetMetadata: false,\n        caBundlePath: 'caBundlePath',\n        changeSetName: 'changeSetName',\n        ci: false,\n        color: false,\n        concurrency: 123,\n        context: {\n          contextKey: 'context',\n        },\n        debug: false,\n        ec2Creds: false,\n        exclusively: false,\n        execute: false,\n        force: false,\n        ignoreErrors: false,\n        json: false,\n        lookups: false,\n        notices: false,\n        notificationArns: ['notificationArns'],\n        output: 'output',\n        outputsFile: 'outputsFile',\n        parameters: {\n          parametersKey: 'parameters',\n        },\n        pathMetadata: false,\n        profile: 'profile',\n        proxy: 'proxy',\n        requireApproval: cloud_assembly_schema.RequireApproval.NEVER,\n        reuseAssets: ['reuseAssets'],\n        roleArn: 'roleArn',\n        rollback: false,\n        stacks: ['stacks'],\n        staging: false,\n        strict: false,\n        toolkitStackName: 'toolkitStackName',\n        trace: false,\n        usePreviousParameters: false,\n        verbose: false,\n        versionReporting: false,\n      },\n      enabled: false,\n      expectedMessage: 'expectedMessage',\n      expectError: false,\n    },\n    destroy: {\n      args: {\n        all: false,\n        app: 'app',\n        assetMetadata: false,\n        caBundlePath: 'caBundlePath',\n        color: false,\n        context: {\n          contextKey: 'context',\n        },\n        debug: false,\n        ec2Creds: false,\n        exclusively: false,\n        force: false,\n        ignoreErrors: false,\n        json: false,\n        lookups: false,\n        notices: false,\n        output: 'output',\n        pathMetadata: false,\n        profile: 'profile',\n        proxy: 'proxy',\n        roleArn: 'roleArn',\n        stacks: ['stacks'],\n        staging: false,\n        strict: false,\n        trace: false,\n        verbose: false,\n        versionReporting: false,\n      },\n      enabled: false,\n      expectedMessage: 'expectedMessage',\n      expectError: false,\n    },\n  },\n  diffAssets: false,\n  hooks: {\n    postDeploy: ['postDeploy'],\n    postDestroy: ['postDestroy'],\n    preDeploy: ['preDeploy'],\n    preDestroy: ['preDestroy'],\n  },\n  regions: ['regions'],\n  stackUpdateWorkflow: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.IntegTestCaseProps",
      "interfaces": [
        "aws-cdk-lib.cloud_assembly_schema.TestOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/test-case.ts",
        "line": 13
      },
      "name": "IntegTestCaseProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Stacks to be deployed during the test."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/test-case.ts",
            "line": 17
          },
          "name": "stacks",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "aws-cdk-lib.Stack"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a stack is created for you",
            "stability": "experimental",
            "summary": "Specify a stack to use for assertions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/test-case.ts",
            "line": 24
          },
          "name": "assertionStack",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.Stack"
          }
        }
      ],
      "symbolId": "lib/test-case:IntegTestCaseProps"
    },
    "@aws-cdk/integ-tests-alpha.IntegTestCaseStack": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "base": "aws-cdk-lib.Stack",
      "docs": {
        "remarks": "This should be used if there are multiple stacks in the integration test\nand it is necessary to specify different test case option for each. Otherwise\nnormal stacks should be added to IntegTest",
        "stability": "experimental",
        "summary": "An integration test case stack. Allows the definition of test properties that should apply to this stack.",
        "example": "declare const app: App;\ndeclare const stackUnderTest: Stack;\nconst testCaseWithAssets = new IntegTestCaseStack(app, 'TestCaseAssets', {\n  diffAssets: true,\n});\n\nnew IntegTest(app, 'Integ', { testCases: [stackUnderTest, testCaseWithAssets] });",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.IntegTestCaseStack",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/test-case.ts",
          "line": 102
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.IntegTestCaseStackProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/test-case.ts",
        "line": 83
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns whether the construct is a IntegTestCaseStack."
          },
          "locationInModule": {
            "filename": "lib/test-case.ts",
            "line": 87
          },
          "name": "isIntegTestCaseStack",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        }
      ],
      "name": "IntegTestCaseStack",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Make assertions on resources in this test case."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/test-case.ts",
            "line": 94
          },
          "name": "assertions",
          "type": {
            "fqn": "@aws-cdk/integ-tests-alpha.IDeployAssert"
          }
        }
      ],
      "symbolId": "lib/test-case:IntegTestCaseStack"
    },
    "@aws-cdk/integ-tests-alpha.IntegTestCaseStackProps": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties of an integration test case stack.",
        "example": "declare const app: App;\ndeclare const stackUnderTest: Stack;\nconst testCaseWithAssets = new IntegTestCaseStack(app, 'TestCaseAssets', {\n  diffAssets: true,\n});\n\nnew IntegTest(app, 'Integ', { testCases: [stackUnderTest, testCaseWithAssets] });",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.IntegTestCaseStackProps",
      "interfaces": [
        "aws-cdk-lib.cloud_assembly_schema.TestOptions",
        "aws-cdk-lib.StackProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/test-case.ts",
        "line": 73
      },
      "name": "IntegTestCaseStackProps",
      "symbolId": "lib/test-case:IntegTestCaseStackProps"
    },
    "@aws-cdk/integ-tests-alpha.IntegTestProps": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Integration test properties.",
        "example": "declare const app: App;\ndeclare const stack: Stack;\ndeclare const sm: IStateMachine;\n\nconst testCase = new IntegTest(app, 'IntegTest', {\n  testCases: [stack],\n});\n\n// Start an execution\nconst start = testCase.assertions.awsApiCall('StepFunctions', 'startExecution', {\n  stateMachineArn: sm.stateMachineArn,\n});\n\n// describe the results of the execution\nconst describe = testCase.assertions.awsApiCall('StepFunctions', 'describeExecution', {\n  executionArn: start.getAttString('executionArn'),\n});\n\n// assert the results\ndescribe.expect(ExpectedResult.objectLike({\n  status: 'SUCCEEDED',\n}));",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.IntegTestProps",
      "interfaces": [
        "aws-cdk-lib.cloud_assembly_schema.TestOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/test-case.ts",
        "line": 119
      },
      "name": "IntegTestProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "List of test cases that make up this test."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/test-case.ts",
            "line": 123
          },
          "name": "testCases",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "aws-cdk-lib.Stack"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a stack is created for you",
            "stability": "experimental",
            "summary": "Specify a stack to use for assertions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/test-case.ts",
            "line": 140
          },
          "name": "assertionStack",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.Stack"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "If lookups are enabled\nthen `stackUpdateWorkflow` must be set to false.\nLookups should only be enabled when you are explicitly testing\nlookups.",
            "stability": "experimental",
            "summary": "Enable lookups for this test."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/test-case.ts",
            "line": 133
          },
          "name": "enableLookups",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/test-case:IntegTestProps"
    },
    "@aws-cdk/integ-tests-alpha.InvocationType": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "docs": {
        "remarks": "Default is REQUEST_RESPONSE",
        "stability": "experimental",
        "summary": "The type of invocation.",
        "example": "declare const app: App;\ndeclare const stack: Stack;\ndeclare const queue: sqs.Queue;\ndeclare const fn: lambda.IFunction;\n\nconst integ = new IntegTest(app, 'Integ', {\n  testCases: [stack],\n});\n\ninteg.assertions.invokeFunction({\n  functionName: fn.functionName,\n  invocationType: InvocationType.EVENT,\n  payload: JSON.stringify({ status: 'OK' }),\n});\n\nconst message = integ.assertions.awsApiCall('SQS', 'receiveMessage', {\n  QueueUrl: queue.queueUrl,\n  WaitTimeSeconds: 20,\n});\n\nmessage.assertAtPath('Messages.0.Body', ExpectedResult.objectLike({\n  requestContext: {\n    condition: 'Success',\n  },\n  requestPayload: {\n    status: 'OK',\n  },\n  responseContext: {\n    statusCode: 200,\n  },\n  responsePayload: 'success',\n}));",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.InvocationType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/assertions/sdk.ts",
        "line": 170
      },
      "members": [
        {
          "docs": {
            "remarks": "Send events that fail multiple times to the function's\ndead-letter queue (if it's configured).\nThe API response only includes a status code.",
            "stability": "experimental",
            "summary": "Invoke the function asynchronously."
          },
          "name": "EVENT"
        },
        {
          "docs": {
            "remarks": "Keep the connection open until the function returns a response or times out.\nThe API response includes the function response and additional data.",
            "stability": "experimental",
            "summary": "Invoke the function synchronously."
          },
          "name": "REQUEST_RESPONSE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Validate parameter values and verify that the user or role has permission to invoke the function."
          },
          "name": "DRY_RUN"
        }
      ],
      "name": "InvocationType",
      "symbolId": "lib/assertions/sdk:InvocationType"
    },
    "@aws-cdk/integ-tests-alpha.LambdaFunctionProviderProps": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for a lambda function provider.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as integ_tests_alpha from '@aws-cdk/integ-tests-alpha';\nimport { aws_logs as logs } from 'aws-cdk-lib';\nconst lambdaFunctionProviderProps: integ_tests_alpha.LambdaFunctionProviderProps = {\n  handler: 'handler',\n  logRetention: logs.RetentionDays.ONE_DAY,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.LambdaFunctionProviderProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assertions/providers/provider.ts",
        "line": 20
      },
      "name": "LambdaFunctionProviderProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "index.handler",
            "stability": "experimental",
            "summary": "The handler to use for the lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/provider.ts",
            "line": 26
          },
          "name": "handler",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no retention days specified",
            "stability": "experimental",
            "summary": "How long, in days, the log contents will be retained."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/providers/provider.ts",
            "line": 33
          },
          "name": "logRetention",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_logs.RetentionDays"
          }
        }
      ],
      "symbolId": "lib/assertions/providers/provider:LambdaFunctionProviderProps"
    },
    "@aws-cdk/integ-tests-alpha.LambdaInvokeFunction": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "base": "@aws-cdk/integ-tests-alpha.AwsApiCall",
      "docs": {
        "remarks": "Use this instead of the generic AwsApiCall in order to\ninvoke a lambda function. This will automatically create\nthe correct permissions to invoke the function",
        "stability": "experimental",
        "summary": "An AWS Lambda Invoke function API call.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as integ_tests_alpha from '@aws-cdk/integ-tests-alpha';\nimport { aws_logs as logs } from 'aws-cdk-lib';\nconst lambdaInvokeFunction = new integ_tests_alpha.LambdaInvokeFunction(this, 'MyLambdaInvokeFunction', {\n  functionName: 'functionName',\n\n  // the properties below are optional\n  invocationType: integ_tests_alpha.InvocationType.EVENT,\n  logRetention: logs.RetentionDays.ONE_DAY,\n  logType: integ_tests_alpha.LogType.NONE,\n  payload: 'payload',\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.LambdaInvokeFunction",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/assertions/sdk.ts",
          "line": 238
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.LambdaInvokeFunctionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/assertions/sdk.ts",
        "line": 237
      },
      "name": "LambdaInvokeFunction",
      "symbolId": "lib/assertions/sdk:LambdaInvokeFunction"
    },
    "@aws-cdk/integ-tests-alpha.LambdaInvokeFunctionProps": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Options to pass to the Lambda invokeFunction API call.",
        "example": "declare const lambdaFunction: lambda.IFunction;\ndeclare const app: App;\n\nconst stack = new Stack(app, 'cdk-integ-lambda-bundling');\n\nconst integ = new IntegTest(app, 'IntegTest', {\n  testCases: [stack],\n});\n\nconst invoke = integ.assertions.invokeFunction({\n  functionName: lambdaFunction.functionName,\n});\ninvoke.expect(ExpectedResult.objectLike({\n  Payload: '200',\n}));",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.LambdaInvokeFunctionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assertions/sdk.ts",
        "line": 196
      },
      "name": "LambdaInvokeFunctionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of the function to invoke."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/sdk.ts",
            "line": 200
          },
          "name": "functionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "InvocationType.REQUEST_RESPONSE",
            "stability": "experimental",
            "summary": "The type of invocation to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/sdk.ts",
            "line": 207
          },
          "name": "invocationType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/integ-tests-alpha.InvocationType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no retention days specified",
            "stability": "experimental",
            "summary": "How long, in days, the log contents will be retained."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/sdk.ts",
            "line": 221
          },
          "name": "logRetention",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_logs.RetentionDays"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "LogType.NONE",
            "stability": "experimental",
            "summary": "Whether to return the logs as part of the response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/sdk.ts",
            "line": 214
          },
          "name": "logType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/integ-tests-alpha.LogType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no payload",
            "stability": "experimental",
            "summary": "Payload to send as part of the invoke."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/sdk.ts",
            "line": 228
          },
          "name": "payload",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/assertions/sdk:LambdaInvokeFunctionProps"
    },
    "@aws-cdk/integ-tests-alpha.LogType": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "docs": {
        "remarks": "Applies to synchronously invoked functions only.",
        "stability": "experimental",
        "summary": "Set to Tail to include the execution log in the response."
      },
      "fqn": "@aws-cdk/integ-tests-alpha.LogType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/assertions/sdk.ts",
        "line": 155
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The log messages are not returned in the response."
          },
          "name": "NONE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The log messages are returned in the response."
          },
          "name": "TAIL"
        }
      ],
      "name": "LogType",
      "symbolId": "lib/assertions/sdk:LogType"
    },
    "@aws-cdk/integ-tests-alpha.Match": {
      "abstract": true,
      "assembly": "@aws-cdk/integ-tests-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Partial and special matching during assertions."
      },
      "fqn": "@aws-cdk/integ-tests-alpha.Match",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/assertions/match.ts",
        "line": 5
      },
      "methods": [
        {
          "docs": {
            "remarks": "The set of elements (or matchers) must be in the same order as would be found.",
            "stability": "experimental",
            "summary": "Matches the specified pattern with the array found in the same relative path of the target."
          },
          "locationInModule": {
            "filename": "lib/assertions/match.ts",
            "line": 11
          },
          "name": "arrayWith",
          "parameters": [
            {
              "docs": {
                "summary": "the pattern to match."
              },
              "name": "pattern",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "collection": {
                    "elementtype": {
                      "primitive": "any"
                    },
                    "kind": "array"
                  }
                },
                "kind": "map"
              }
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The keys and their values (or matchers) must be present in the target but the target can be a superset.",
            "stability": "experimental",
            "summary": "Matches the specified pattern to an object found in the same relative path of the target."
          },
          "locationInModule": {
            "filename": "lib/assertions/match.ts",
            "line": 20
          },
          "name": "objectLike",
          "parameters": [
            {
              "docs": {
                "summary": "the pattern to match."
              },
              "name": "pattern",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "collection": {
                    "elementtype": {
                      "primitive": "any"
                    },
                    "kind": "map"
                  }
                },
                "kind": "map"
              }
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Matches any string-encoded JSON and applies the specified pattern after parsing it."
          },
          "locationInModule": {
            "filename": "lib/assertions/match.ts",
            "line": 35
          },
          "name": "serializedJson",
          "parameters": [
            {
              "docs": {
                "summary": "the pattern to match after parsing the encoded JSON."
              },
              "name": "pattern",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "collection": {
                    "elementtype": {
                      "primitive": "any"
                    },
                    "kind": "map"
                  }
                },
                "kind": "map"
              }
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Matches targets according to a regular expression."
          },
          "locationInModule": {
            "filename": "lib/assertions/match.ts",
            "line": 27
          },
          "name": "stringLikeRegexp",
          "parameters": [
            {
              "name": "pattern",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "map"
              }
            }
          },
          "static": true
        }
      ],
      "name": "Match",
      "symbolId": "lib/assertions/match:Match"
    },
    "@aws-cdk/integ-tests-alpha.Status": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "The status of the assertion."
      },
      "fqn": "@aws-cdk/integ-tests-alpha.Status",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/assertions/providers/lambda-handler/types.ts",
        "line": 251
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The assertion passed."
          },
          "name": "PASS"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The assertion failed."
          },
          "name": "FAIL"
        }
      ],
      "name": "Status",
      "symbolId": "lib/assertions/providers/lambda-handler/types:Status"
    },
    "@aws-cdk/integ-tests-alpha.WaiterStateMachine": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "base": "constructs.Construct",
      "docs": {
        "remarks": "This is so that this package does not need to depend on aws-stepfunctions module.\n\nThe state machine continuously calls the isCompleteHandler, until it succeeds or times out.\nThe handler is called `maxAttempts` times with an `interval` duration and a `backoffRate` rate.\n\nFor example with:\n- maxAttempts = 360 (30 minutes)\n- interval = 5\n- backoffRate = 1 (no backoff)\n\nit will make the API Call every 5 seconds and fail after 360 failures.\n\nIf the backoff rate is changed to 2 (for example), it will\n- make the first call\n- wait 5 seconds\n- make the second call\n- wait 15 seconds\n- etc.",
        "stability": "experimental",
        "summary": "A very simple StateMachine construct highly customized to the provider framework.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as integ_tests_alpha from '@aws-cdk/integ-tests-alpha';\nimport * as cdk from 'aws-cdk-lib';\nconst waiterStateMachine = new integ_tests_alpha.WaiterStateMachine(this, 'MyWaiterStateMachine', /* all optional props */ {\n  backoffRate: 123,\n  interval: cdk.Duration.minutes(30),\n  totalTimeout: cdk.Duration.minutes(30),\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.WaiterStateMachine",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/assertions/waiter-state-machine.ts",
          "line": 80
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/integ-tests-alpha.WaiterStateMachineProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/assertions/waiter-state-machine.ts",
        "line": 64
      },
      "name": "WaiterStateMachine",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The AssertionsProvide that handles async requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/waiter-state-machine.ts",
            "line": 78
          },
          "name": "isCompleteProvider",
          "type": {
            "fqn": "@aws-cdk/integ-tests-alpha.AssertionsProvider"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The IAM Role ARN of the role used by the state machine."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/waiter-state-machine.ts",
            "line": 73
          },
          "name": "roleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The ARN of the statemachine."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/waiter-state-machine.ts",
            "line": 68
          },
          "name": "stateMachineArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/assertions/waiter-state-machine:WaiterStateMachine"
    },
    "@aws-cdk/integ-tests-alpha.WaiterStateMachineOptions": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Options for creating a WaiterStateMachine.",
        "example": "#!/usr/bin/env node\nimport * as path from 'path';\nimport * as firehose from 'aws-cdk-lib/aws-kinesisfirehose';\nimport * as kms from 'aws-cdk-lib/aws-kms';\nimport * as lambdanodejs from 'aws-cdk-lib/aws-lambda-nodejs';\nimport * as logs from 'aws-cdk-lib/aws-logs';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport { AwsApiCall, ExpectedResult, IntegTest } from '@aws-cdk/integ-tests-alpha';\n\nconst app = new cdk.App({\n  postCliContext: {\n    '@aws-cdk/aws-lambda:useCdkManagedLogGroup': false,\n  },\n});\n\nconst stack = new cdk.Stack(app, 'aws-cdk-firehose-delivery-stream-s3-all-properties');\n\nconst bucket = new s3.Bucket(stack, 'FirehoseDeliveryStreamS3AllPropertiesBucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  autoDeleteObjects: true,\n});\n\nconst backupBucket = new s3.Bucket(stack, 'FirehoseDeliveryStreamS3AllPropertiesBackupBucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  autoDeleteObjects: true,\n});\nconst logGroup = new logs.LogGroup(stack, 'LogGroup', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nconst dataProcessorFunction = new lambdanodejs.NodejsFunction(stack, 'DataProcessorFunction', {\n  entry: path.join(__dirname, 'lambda-data-processor.js'),\n  timeout: cdk.Duration.minutes(1),\n});\n\nconst processor = new firehose.LambdaFunctionProcessor(dataProcessorFunction, {\n  bufferInterval: cdk.Duration.seconds(60),\n  bufferSize: cdk.Size.mebibytes(1),\n  retries: 1,\n});\n\nconst key = new kms.Key(stack, 'Key', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nconst backupKey = new kms.Key(stack, 'BackupKey', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nconst deliveryStream = new firehose.DeliveryStream(stack, 'DeliveryStream', {\n  destination: new firehose.S3Bucket(bucket, {\n    loggingConfig: new firehose.EnableLogging(logGroup),\n    processor: processor,\n    compression: firehose.Compression.GZIP,\n    dataOutputPrefix: 'regularPrefix',\n    errorOutputPrefix: 'errorPrefix',\n    fileExtension: '.log.gz',\n    timeZone: cdk.TimeZone.ASIA_TOKYO,\n    bufferingInterval: cdk.Duration.seconds(60),\n    bufferingSize: cdk.Size.mebibytes(1),\n    encryptionKey: key,\n    s3Backup: {\n      mode: firehose.BackupMode.ALL,\n      bucket: backupBucket,\n      compression: firehose.Compression.ZIP,\n      dataOutputPrefix: 'backupPrefix',\n      errorOutputPrefix: 'backupErrorPrefix',\n      bufferingInterval: cdk.Duration.seconds(60),\n      bufferingSize: cdk.Size.mebibytes(1),\n      encryptionKey: backupKey,\n    },\n  }),\n});\n\nnew firehose.DeliveryStream(stack, 'ZeroBufferingDeliveryStream', {\n  destination: new firehose.S3Bucket(bucket, {\n    compression: firehose.Compression.GZIP,\n    dataOutputPrefix: 'regularPrefix',\n    errorOutputPrefix: 'errorPrefix',\n    bufferingInterval: cdk.Duration.seconds(0),\n  }),\n});\n\nconst testCase = new IntegTest(app, 'integ-tests', {\n  testCases: [stack],\n  regions: ['us-east-1'],\n});\n\ntestCase.assertions.awsApiCall('Firehose', 'putRecord', {\n  DeliveryStreamName: deliveryStream.deliveryStreamName,\n  Record: {\n    Data: 'testData123',\n  },\n});\n\nconst s3ApiCall = testCase.assertions.awsApiCall('S3', 'listObjectsV2', {\n  Bucket: bucket.bucketName,\n  MaxKeys: 1,\n}).expect(ExpectedResult.objectLike({\n  KeyCount: 1,\n})).waitForAssertions({\n  interval: cdk.Duration.seconds(30),\n  totalTimeout: cdk.Duration.minutes(10),\n});\n\nif (s3ApiCall instanceof AwsApiCall && s3ApiCall.waiterProvider) {\n  s3ApiCall.waiterProvider.addToRolePolicy({\n    Effect: 'Allow',\n    Action: ['s3:GetObject', 's3:ListBucket'],\n    Resource: ['*'],\n  });\n}",
        "custom": {
          "exampleMetadata": "lit=../@aws-cdk-testing/framework-integ/test/aws-kinesisfirehose/test/integ.s3-bucket.lit.ts infused"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.WaiterStateMachineOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assertions/waiter-state-machine.ts",
        "line": 8
      },
      "name": "WaiterStateMachineOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "1 (no backoff)",
            "remarks": "This is the multiplier by which the retry interval increases\nafter each retry attempt.\n\nBy default there is no backoff. Each retry will wait the amount of time\nspecified by `interval`.",
            "stability": "experimental",
            "summary": "Backoff between attempts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/waiter-state-machine.ts",
            "line": 35
          },
          "name": "backoffRate",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(5)",
            "stability": "experimental",
            "summary": "The interval (number of seconds) to wait between attempts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/waiter-state-machine.ts",
            "line": 22
          },
          "name": "interval",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(30)",
            "stability": "experimental",
            "summary": "The total time that the state machine will wait for a successful response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assertions/waiter-state-machine.ts",
            "line": 15
          },
          "name": "totalTimeout",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.Duration"
          }
        }
      ],
      "symbolId": "lib/assertions/waiter-state-machine:WaiterStateMachineOptions"
    },
    "@aws-cdk/integ-tests-alpha.WaiterStateMachineProps": {
      "assembly": "@aws-cdk/integ-tests-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Props for creating a WaiterStateMachine.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as integ_tests_alpha from '@aws-cdk/integ-tests-alpha';\nimport * as cdk from 'aws-cdk-lib';\nconst waiterStateMachineProps: integ_tests_alpha.WaiterStateMachineProps = {\n  backoffRate: 123,\n  interval: cdk.Duration.minutes(30),\n  totalTimeout: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/integ-tests-alpha.WaiterStateMachineProps",
      "interfaces": [
        "@aws-cdk/integ-tests-alpha.WaiterStateMachineOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assertions/waiter-state-machine.ts",
        "line": 41
      },
      "name": "WaiterStateMachineProps",
      "symbolId": "lib/assertions/waiter-state-machine:WaiterStateMachineProps"
    }
  },
  "version": "2.214.0-alpha.0",
  "fingerprint": "**********"
}